{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\coding-challenge-platform\\\\client\\\\src\\\\components\\\\ChallengeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, Paper, CircularProgress, Select, MenuItem, FormControl, InputLabel, Snackbar, Alert, Divider, Grid, Card, CardContent, Chip } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport Editor from \"@monaco-editor/react\";\nimport { socket } from '../socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChallengeRoom = ({\n  roomId,\n  onExit\n}) => {\n  _s();\n  var _result$results;\n  const [challenge, setChallenge] = useState(null);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('cpp');\n  const [status, setStatus] = useState('waiting');\n  const [result, setResult] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [startTime, setStartTime] = useState(null);\n  useEffect(() => {\n    if (!roomId) return;\n    socket.emit('joinChallenge', roomId, response => {\n      if (response.error) {\n        setNotification({\n          open: true,\n          message: response.error,\n          severity: 'error'\n        });\n        onExit();\n        return;\n      }\n      setChallenge(response.challenge);\n      setCode(response.challenge.boilerplateCode[language]);\n      if (response.started && response.startTime) {\n        setStatus('started');\n        setStartTime(response.startTime);\n        const elapsed = Math.floor((Date.now() - response.startTime) / 1000);\n        setTimeLeft(Math.max(0, response.challenge.timeLimit - elapsed));\n      }\n    });\n    socket.on('gameStart', ({\n      challenge,\n      startTime\n    }) => {\n      setChallenge(challenge);\n      setStatus('started');\n      setStartTime(startTime);\n      setTimeLeft(challenge.timeLimit);\n      setNotification({\n        open: true,\n        message: 'Game started! Good luck!',\n        severity: 'success'\n      });\n    });\n    socket.on('submissionResult', validation => {\n      setResult(validation);\n      if (validation.error) {\n        setNotification({\n          open: true,\n          message: `Error: ${validation.error}`,\n          severity: 'error'\n        });\n      } else if (validation.passed) {\n        setNotification({\n          open: true,\n          message: 'All test cases passed!',\n          severity: 'success'\n        });\n      } else {\n        setNotification({\n          open: true,\n          message: 'Some test cases failed. Check the results below.',\n          severity: 'warning'\n        });\n      }\n    });\n    socket.on('gameOver', ({\n      winnerId,\n      solutions\n    }) => {\n      setStatus('finished');\n      setResult({\n        isWinner: socket.id === winnerId,\n        solutions\n      });\n      setNotification({\n        open: true,\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'Game Over! Better luck next time!',\n        severity: socket.id === winnerId ? 'success' : 'info'\n      });\n    });\n    socket.on('playerLeft', () => {\n      setNotification({\n        open: true,\n        message: 'Your opponent has left the game',\n        severity: 'warning'\n      });\n      onExit();\n    });\n    return () => {\n      socket.off('gameStart');\n      socket.off('submissionResult');\n      socket.off('gameOver');\n      socket.off('playerLeft');\n    };\n  }, [roomId, onExit, language]);\n  useEffect(() => {\n    let timer;\n    if (status === 'started' && timeLeft > 0) {\n      timer = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\n        const remaining = Math.max(0, challenge.timeLimit - elapsed);\n        setTimeLeft(remaining);\n        if (remaining === 0) {\n          setStatus('finished');\n          setNotification({\n            open: true,\n            message: 'Time is up!',\n            severity: 'warning'\n          });\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [status, startTime, challenge, timeLeft]);\n  const handleLanguageChange = event => {\n    const newLang = event.target.value;\n    setLanguage(newLang);\n    if (challenge && challenge.boilerplateCode[newLang]) {\n      setCode(challenge.boilerplateCode[newLang]);\n    }\n  };\n  const handleSubmit = () => {\n    if (!code.trim()) {\n      setNotification({\n        open: true,\n        message: 'Please write some code before submitting',\n        severity: 'warning'\n      });\n      return;\n    }\n    setNotification({\n      open: true,\n      message: 'Testing your solution...',\n      severity: 'info'\n    });\n    socket.emit('submitSolution', {\n      roomId,\n      code,\n      language\n    });\n  };\n  const handleCloseNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  if (!challenge) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: challenge.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: challenge.difficulty.toUpperCase(),\n            color: challenge.difficulty === 'easy' ? 'success' : challenge.difficulty === 'medium' ? 'warning' : 'error',\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            paragraph: true,\n            children: challenge.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Input Format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            paragraph: true,\n            children: challenge.inputFormat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Output Format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            paragraph: true,\n            children: challenge.outputFormat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Constraints:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: challenge.constraints.map((constraint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: constraint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Examples:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), challenge.examples.map((example, index) => /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontFamily: 'monospace',\n                  mb: 1\n                },\n                children: example.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontFamily: 'monospace',\n                  mb: 1\n                },\n                children: example.output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Explanation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: example.explanation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                minWidth: 120\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: language,\n                onChange: handleLanguageChange,\n                label: \"Language\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"cpp\",\n                  children: \"C++\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"java\",\n                  children: \"Java\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"python\",\n                  children: \"Python\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              color: timeLeft < 60 ? \"error\" : \"text.primary\",\n              children: [\"Time Left: \", formatTime(timeLeft)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Editor, {\n            height: \"400px\",\n            language: language === 'cpp' ? 'cpp' : language,\n            value: code,\n            onChange: setCode,\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              lineNumbers: 'on',\n              automaticLayout: true,\n              scrollBeyondLastLine: false,\n              tabSize: 4,\n              wordWrap: 'on'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSubmit,\n              disabled: status !== 'started' || timeLeft === 0,\n              sx: {\n                minWidth: 150\n              },\n              children: status === 'waiting' ? 'Waiting for players...' : timeLeft === 0 ? 'Time is up!' : 'Submit Solution'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: onExit,\n              sx: {\n                minWidth: 120\n              },\n              children: \"Exit Challenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              mt: 3,\n              p: 2,\n              bgcolor: 'background.default'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  mr: 1\n                },\n                children: \"Test Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), result.passed ? /*#__PURE__*/_jsxDEV(Chip, {\n                icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 29\n                }, this),\n                label: \"All Tests Passed\",\n                color: \"success\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 29\n                }, this),\n                label: \"Some Tests Failed\",\n                color: \"error\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), (_result$results = result.results) === null || _result$results === void 0 ? void 0 : _result$results.map((testResult, index) => /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                mb: 2,\n                borderColor: testResult.passed ? 'success.main' : 'error.main'\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: testResult.passed ? \"success.main\" : \"error.main\",\n                    children: [\"Test Case \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: testResult.passed ? \"Passed\" : \"Failed\",\n                    color: testResult.passed ? \"success\" : \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    pl: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    color: \"text.secondary\",\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1\n                    },\n                    children: testResult.input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    color: \"text.secondary\",\n                    children: \"Expected Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1\n                    },\n                    children: testResult.expected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    color: \"text.secondary\",\n                    children: \"Your Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1\n                    },\n                    children: testResult.actual\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 25\n                  }, this), testResult.execution_time && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"Execution time: \", testResult.execution_time, \"ms\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseNotification,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseNotification,\n        severity: notification.severity,\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengeRoom, \"dL8F9mzW2Ys2HtdDZK/EXRpDJuc=\");\n_c = ChallengeRoom;\nexport default ChallengeRoom;\nvar _c;\n$RefreshReg$(_c, \"ChallengeRoom\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Snackbar","Alert","Divider","Grid","Card","CardContent","Chip","CheckCircleIcon","ErrorIcon","Editor","socket","jsxDEV","_jsxDEV","ChallengeRoom","roomId","onExit","_s","_result$results","challenge","setChallenge","code","setCode","language","setLanguage","status","setStatus","result","setResult","timeLeft","setTimeLeft","notification","setNotification","open","message","severity","startTime","setStartTime","emit","response","error","boilerplateCode","started","elapsed","Math","floor","Date","now","max","timeLimit","on","validation","passed","winnerId","solutions","isWinner","id","off","timer","setInterval","remaining","clearInterval","handleLanguageChange","event","newLang","target","value","handleSubmit","trim","handleCloseNotification","prev","formatTime","seconds","minutes","remainingSeconds","toString","padStart","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","container","spacing","item","xs","md","elevation","variant","gutterBottom","title","label","difficulty","toUpperCase","color","mb","paragraph","description","inputFormat","outputFormat","constraints","map","constraint","index","examples","example","fontFamily","input","output","explanation","minWidth","onChange","theme","options","minimap","enabled","fontSize","lineNumbers","automaticLayout","scrollBeyondLastLine","tabSize","wordWrap","mt","onClick","disabled","bgcolor","mr","icon","results","testResult","borderColor","size","pl","expected","actual","execution_time","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/KALAIVANI/coding-challenge-platform/client/src/components/ChallengeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Snackbar,\r\n  Alert,\r\n  Divider,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n} from '@mui/material';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { socket } from '../socket';\r\n\r\nconst ChallengeRoom = ({ roomId, onExit }) => {\r\n  const [challenge, setChallenge] = useState(null);\r\n  const [code, setCode] = useState('');\r\n  const [language, setLanguage] = useState('cpp');\r\n  const [status, setStatus] = useState('waiting');\r\n  const [result, setResult] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [startTime, setStartTime] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n\r\n    socket.emit('joinChallenge', roomId, (response) => {\r\n      if (response.error) {\r\n        setNotification({\r\n          open: true,\r\n          message: response.error,\r\n          severity: 'error'\r\n        });\r\n        onExit();\r\n        return;\r\n      }\r\n      \r\n      setChallenge(response.challenge);\r\n      setCode(response.challenge.boilerplateCode[language]);\r\n      if (response.started && response.startTime) {\r\n        setStatus('started');\r\n        setStartTime(response.startTime);\r\n        const elapsed = Math.floor((Date.now() - response.startTime) / 1000);\r\n        setTimeLeft(Math.max(0, response.challenge.timeLimit - elapsed));\r\n      }\r\n    });\r\n\r\n    socket.on('gameStart', ({ challenge, startTime }) => {\r\n      setChallenge(challenge);\r\n      setStatus('started');\r\n      setStartTime(startTime);\r\n      setTimeLeft(challenge.timeLimit);\r\n      setNotification({\r\n        open: true,\r\n        message: 'Game started! Good luck!',\r\n        severity: 'success'\r\n      });\r\n    });\r\n\r\n    socket.on('submissionResult', (validation) => {\r\n      setResult(validation);\r\n      if (validation.error) {\r\n        setNotification({\r\n          open: true,\r\n          message: `Error: ${validation.error}`,\r\n          severity: 'error'\r\n        });\r\n      } else if (validation.passed) {\r\n        setNotification({\r\n          open: true,\r\n          message: 'All test cases passed!',\r\n          severity: 'success'\r\n        });\r\n      } else {\r\n        setNotification({\r\n          open: true,\r\n          message: 'Some test cases failed. Check the results below.',\r\n          severity: 'warning'\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on('gameOver', ({ winnerId, solutions }) => {\r\n      setStatus('finished');\r\n      setResult({\r\n        isWinner: socket.id === winnerId,\r\n        solutions\r\n      });\r\n      setNotification({\r\n        open: true,\r\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'Game Over! Better luck next time!',\r\n        severity: socket.id === winnerId ? 'success' : 'info'\r\n      });\r\n    });\r\n\r\n    socket.on('playerLeft', () => {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Your opponent has left the game',\r\n        severity: 'warning'\r\n      });\r\n      onExit();\r\n    });\r\n\r\n    return () => {\r\n      socket.off('gameStart');\r\n      socket.off('submissionResult');\r\n      socket.off('gameOver');\r\n      socket.off('playerLeft');\r\n    };\r\n  }, [roomId, onExit, language]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (status === 'started' && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\r\n        const remaining = Math.max(0, challenge.timeLimit - elapsed);\r\n        \r\n        setTimeLeft(remaining);\r\n        \r\n        if (remaining === 0) {\r\n          setStatus('finished');\r\n          setNotification({\r\n            open: true,\r\n            message: 'Time is up!',\r\n            severity: 'warning'\r\n          });\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [status, startTime, challenge, timeLeft]);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const newLang = event.target.value;\r\n    setLanguage(newLang);\r\n    if (challenge && challenge.boilerplateCode[newLang]) {\r\n      setCode(challenge.boilerplateCode[newLang]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!code.trim()) {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Please write some code before submitting',\r\n        severity: 'warning'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setNotification({\r\n      open: true,\r\n      message: 'Testing your solution...',\r\n      severity: 'info'\r\n    });\r\n\r\n    socket.emit('submitSolution', {\r\n      roomId,\r\n      code,\r\n      language\r\n    });\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification(prev => ({ ...prev, open: false }));\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  if (!challenge) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper elevation={3} sx={{ p: 3, height: '100%' }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {challenge.title}\r\n            </Typography>\r\n            <Chip \r\n              label={challenge.difficulty.toUpperCase()} \r\n              color={\r\n                challenge.difficulty === 'easy' ? 'success' : \r\n                challenge.difficulty === 'medium' ? 'warning' : 'error'\r\n              }\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <Typography variant=\"body1\" paragraph>\r\n              {challenge.description}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Input Format:\r\n            </Typography>\r\n            <Typography variant=\"body2\" paragraph>\r\n              {challenge.inputFormat}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Output Format:\r\n            </Typography>\r\n            <Typography variant=\"body2\" paragraph>\r\n              {challenge.outputFormat}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Constraints:\r\n            </Typography>\r\n            <ul>\r\n              {challenge.constraints.map((constraint, index) => (\r\n                <li key={index}>\r\n                  <Typography variant=\"body2\">{constraint}</Typography>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Examples:\r\n            </Typography>\r\n            {challenge.examples.map((example, index) => (\r\n              <Card key={index} variant=\"outlined\" sx={{ mb: 2 }}>\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    Input:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                    {example.input}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    Output:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                    {example.output}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    Explanation:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\">\r\n                    {example.explanation}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Paper elevation={3} sx={{ p: 3, height: '100%' }}>\r\n            <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <FormControl sx={{ minWidth: 120 }}>\r\n                <InputLabel>Language</InputLabel>\r\n                <Select\r\n                  value={language}\r\n                  onChange={handleLanguageChange}\r\n                  label=\"Language\"\r\n                >\r\n                  <MenuItem value=\"cpp\">C++</MenuItem>\r\n                  <MenuItem value=\"java\">Java</MenuItem>\r\n                  <MenuItem value=\"python\">Python</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              {timeLeft !== null && (\r\n                <Typography variant=\"h6\" color={timeLeft < 60 ? \"error\" : \"text.primary\"}>\r\n                  Time Left: {formatTime(timeLeft)}\r\n                </Typography>\r\n              )}\r\n            </Box>\r\n\r\n            <Editor\r\n              height=\"400px\"\r\n              language={language === 'cpp' ? 'cpp' : language}\r\n              value={code}\r\n              onChange={setCode}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                lineNumbers: 'on',\r\n                automaticLayout: true,\r\n                scrollBeyondLastLine: false,\r\n                tabSize: 4,\r\n                wordWrap: 'on'\r\n              }}\r\n            />\r\n\r\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n                disabled={status !== 'started' || timeLeft === 0}\r\n                sx={{ minWidth: 150 }}\r\n              >\r\n                {status === 'waiting' ? 'Waiting for players...' : \r\n                 timeLeft === 0 ? 'Time is up!' : \r\n                 'Submit Solution'}\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={onExit}\r\n                sx={{ minWidth: 120 }}\r\n              >\r\n                Exit Challenge\r\n              </Button>\r\n            </Box>\r\n\r\n            {result && (\r\n              <Paper sx={{ mt: 3, p: 2, bgcolor: 'background.default' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"h6\" sx={{ mr: 1 }}>\r\n                    Test Results\r\n                  </Typography>\r\n                  {result.passed ? (\r\n                    <Chip \r\n                      icon={<CheckCircleIcon />} \r\n                      label=\"All Tests Passed\" \r\n                      color=\"success\" \r\n                      variant=\"outlined\" \r\n                    />\r\n                  ) : (\r\n                    <Chip \r\n                      icon={<ErrorIcon />} \r\n                      label=\"Some Tests Failed\" \r\n                      color=\"error\" \r\n                      variant=\"outlined\" \r\n                    />\r\n                  )}\r\n                </Box>\r\n                {result.results?.map((testResult, index) => (\r\n                  <Card key={index} variant=\"outlined\" sx={{ mb: 2, borderColor: testResult.passed ? 'success.main' : 'error.main' }}>\r\n                    <CardContent>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\r\n                        <Typography variant=\"subtitle1\" color={testResult.passed ? \"success.main\" : \"error.main\"}>\r\n                          Test Case {index + 1}\r\n                        </Typography>\r\n                        <Chip \r\n                          size=\"small\"\r\n                          label={testResult.passed ? \"Passed\" : \"Failed\"}\r\n                          color={testResult.passed ? \"success\" : \"error\"}\r\n                        />\r\n                      </Box>\r\n                      <Box sx={{ pl: 2 }}>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Input:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                          {testResult.input}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Expected Output:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                          {testResult.expected}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Your Output:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                          {testResult.actual}\r\n                        </Typography>\r\n                        {testResult.execution_time && (\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Execution time: {testResult.execution_time}ms\r\n                          </Typography>\r\n                        )}\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </Paper>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={notification.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseNotification}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Alert onClose={handleCloseNotification} severity={notification.severity}>\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChallengeRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}