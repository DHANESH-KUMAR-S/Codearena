{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\coding-challenge-platform\\\\client\\\\src\\\\components\\\\ChallengeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, Paper, CircularProgress, Select, MenuItem, FormControl, InputLabel, Snackbar, Alert } from '@mui/material';\nimport Editor from \"@monaco-editor/react\";\nimport { socket } from '../socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGUAGE_TEMPLATES = {\n  javascript: `function solution(input) {\n  // Write your code here\n  \n  return result;\n}`,\n  python: `def solution(input):\n    # Write your code here\n    \n    return result`,\n  java: `public class Solution {\n    public static Object solution(Object input) {\n        // Write your code here\n        \n        return result;\n    }\n}`\n};\nconst ChallengeRoom = ({\n  roomId,\n  onExit\n}) => {\n  _s();\n  const [challenge, setChallenge] = useState(null);\n  const [code, setCode] = useState(LANGUAGE_TEMPLATES.javascript);\n  const [language, setLanguage] = useState('javascript');\n  const [status, setStatus] = useState('waiting');\n  const [result, setResult] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  useEffect(() => {\n    if (!roomId) return;\n    socket.emit('joinChallenge', roomId, response => {\n      if (response.error) {\n        alert(response.error);\n        onExit();\n        return;\n      }\n      if (!response.challenge) {\n        alert('Failed to generate challenge. Please try again.');\n        onExit();\n        return;\n      }\n      setChallenge(response.challenge);\n    });\n    socket.on('gameStart', ({\n      challenge\n    }) => {\n      if (!challenge) {\n        alert('Failed to start game. Please try again.');\n        onExit();\n        return;\n      }\n      setChallenge(challenge);\n      setStatus('started');\n      setTimeLeft(challenge.timeLimit || 30);\n      setNotification({\n        open: true,\n        message: 'Game started! Good luck!',\n        severity: 'success'\n      });\n    });\n    socket.on('submissionResult', validation => {\n      setResult(validation);\n      if (validation.passed) {\n        setNotification({\n          open: true,\n          message: 'All test cases passed!',\n          severity: 'success'\n        });\n      } else {\n        setNotification({\n          open: true,\n          message: 'Some test cases failed. Check the results below.',\n          severity: 'error'\n        });\n      }\n    });\n    socket.on('gameOver', ({\n      winnerId,\n      solutions\n    }) => {\n      setStatus('finished');\n      setResult({\n        isWinner: socket.id === winnerId,\n        solutions\n      });\n      setNotification({\n        open: true,\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'Game Over! Better luck next time!',\n        severity: socket.id === winnerId ? 'success' : 'info'\n      });\n    });\n    socket.on('playerLeft', () => {\n      setNotification({\n        open: true,\n        message: 'Your opponent has left the game',\n        severity: 'warning'\n      });\n      onExit();\n    });\n    return () => {\n      socket.off('gameStart');\n      socket.off('submissionResult');\n      socket.off('gameOver');\n      socket.off('playerLeft');\n    };\n  }, [roomId, onExit]);\n  useEffect(() => {\n    let timer;\n    if (status === 'started' && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [status, timeLeft]);\n  const handleLanguageChange = event => {\n    const newLang = event.target.value;\n    setLanguage(newLang);\n    setCode(LANGUAGE_TEMPLATES[newLang]);\n  };\n  const handleSubmit = () => {\n    socket.emit('submitSolution', {\n      roomId,\n      code,\n      language\n    });\n  };\n  const handleCloseNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  if (!challenge) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: challenge.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: challenge.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Examples:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), challenge.examples.map((example, index) => /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 2,\n          p: 2,\n          bgcolor: 'background.paper',\n          borderRadius: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            fontFamily: 'monospace'\n          },\n          children: [\"Input: \", example.input]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            fontFamily: 'monospace'\n          },\n          children: [\"Output: \", example.output]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        color: timeLeft < 10 ? \"error\" : \"primary\",\n        children: [\"Time Left: \", timeLeft, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      sx: {\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Programming Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: language,\n        onChange: handleLanguageChange,\n        label: \"Programming Language\",\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"javascript\",\n          children: \"JavaScript\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"python\",\n          children: \"Python\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"java\",\n          children: \"Java\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      height: \"400px\",\n      language: language,\n      value: code,\n      onChange: setCode,\n      theme: \"vs-dark\",\n      options: {\n        minimap: {\n          enabled: false\n        },\n        fontSize: 14,\n        lineNumbers: 'on',\n        automaticLayout: true,\n        scrollBeyondLastLine: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        disabled: status !== 'started',\n        children: \"Submit Solution\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: onExit,\n        children: \"Exit Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        mt: 3,\n        p: 3\n      },\n      children: result.isWinner !== undefined ? /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: result.isWinner ? \"success.main\" : \"error.main\",\n        children: result.isWinner ? \"You Won! ðŸŽ‰\" : \"Better luck next time!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Test Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), result.results.map((test, index) => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            p: 2,\n            bgcolor: 'background.paper',\n            borderRadius: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: test.passed ? \"success.main\" : \"error.main\",\n            children: [\"Test \", index + 1, \": \", test.passed ? \"Passed âœ“\" : \"Failed âœ—\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pl: 2,\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontFamily: 'monospace'\n              },\n              children: [\"Input: \", test.input]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontFamily: 'monospace'\n              },\n              children: [\"Expected: \", test.expected]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this), !test.passed && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                fontFamily: 'monospace'\n              },\n              children: [\"Got: \", test.actual]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseNotification,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseNotification,\n        severity: notification.severity,\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengeRoom, \"Nw1JR+l04zylzr8cyLjQnIbqlDs=\");\n_c = ChallengeRoom;\nexport default ChallengeRoom;\nvar _c;\n$RefreshReg$(_c, \"ChallengeRoom\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Snackbar","Alert","Editor","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","LANGUAGE_TEMPLATES","javascript","python","java","ChallengeRoom","roomId","onExit","_s","challenge","setChallenge","code","setCode","language","setLanguage","status","setStatus","result","setResult","timeLeft","setTimeLeft","notification","setNotification","open","message","severity","emit","response","error","alert","on","timeLimit","validation","passed","winnerId","solutions","isWinner","id","off","timer","setInterval","prev","clearInterval","handleLanguageChange","event","newLang","target","value","handleSubmit","handleCloseNotification","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","p","elevation","sx","mb","variant","gutterBottom","title","paragraph","description","examples","map","example","index","bgcolor","borderRadius","fontFamily","input","output","color","fullWidth","onChange","label","theme","options","minimap","enabled","fontSize","lineNumbers","automaticLayout","scrollBeyondLastLine","mt","onClick","disabled","undefined","results","test","pl","expected","actual","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/KALAIVANI/coding-challenge-platform/client/src/components/ChallengeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Snackbar,\r\n  Alert,\r\n} from '@mui/material';\r\nimport Editor from \"@monaco-editor/react\";\r\nimport { socket } from '../socket';\r\n\r\nconst LANGUAGE_TEMPLATES = {\r\n  javascript: `function solution(input) {\r\n  // Write your code here\r\n  \r\n  return result;\r\n}`,\r\n  python: `def solution(input):\r\n    # Write your code here\r\n    \r\n    return result`,\r\n  java: `public class Solution {\r\n    public static Object solution(Object input) {\r\n        // Write your code here\r\n        \r\n        return result;\r\n    }\r\n}`,\r\n};\r\n\r\nconst ChallengeRoom = ({ roomId, onExit }) => {\r\n  const [challenge, setChallenge] = useState(null);\r\n  const [code, setCode] = useState(LANGUAGE_TEMPLATES.javascript);\r\n  const [language, setLanguage] = useState('javascript');\r\n  const [status, setStatus] = useState('waiting');\r\n  const [result, setResult] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n\r\n    socket.emit('joinChallenge', roomId, (response) => {\r\n      if (response.error) {\r\n        alert(response.error);\r\n        onExit();\r\n        return;\r\n      }\r\n      if (!response.challenge) {\r\n        alert('Failed to generate challenge. Please try again.');\r\n        onExit();\r\n        return;\r\n      }\r\n      setChallenge(response.challenge);\r\n    });\r\n\r\n    socket.on('gameStart', ({ challenge }) => {\r\n      if (!challenge) {\r\n        alert('Failed to start game. Please try again.');\r\n        onExit();\r\n        return;\r\n      }\r\n      setChallenge(challenge);\r\n      setStatus('started');\r\n      setTimeLeft(challenge.timeLimit || 30);\r\n      setNotification({\r\n        open: true,\r\n        message: 'Game started! Good luck!',\r\n        severity: 'success'\r\n      });\r\n    });\r\n\r\n    socket.on('submissionResult', (validation) => {\r\n      setResult(validation);\r\n      if (validation.passed) {\r\n        setNotification({\r\n          open: true,\r\n          message: 'All test cases passed!',\r\n          severity: 'success'\r\n        });\r\n      } else {\r\n        setNotification({\r\n          open: true,\r\n          message: 'Some test cases failed. Check the results below.',\r\n          severity: 'error'\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on('gameOver', ({ winnerId, solutions }) => {\r\n      setStatus('finished');\r\n      setResult({\r\n        isWinner: socket.id === winnerId,\r\n        solutions\r\n      });\r\n      setNotification({\r\n        open: true,\r\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'Game Over! Better luck next time!',\r\n        severity: socket.id === winnerId ? 'success' : 'info'\r\n      });\r\n    });\r\n\r\n    socket.on('playerLeft', () => {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Your opponent has left the game',\r\n        severity: 'warning'\r\n      });\r\n      onExit();\r\n    });\r\n\r\n    return () => {\r\n      socket.off('gameStart');\r\n      socket.off('submissionResult');\r\n      socket.off('gameOver');\r\n      socket.off('playerLeft');\r\n    };\r\n  }, [roomId, onExit]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (status === 'started' && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prev) => {\r\n          if (prev <= 1) {\r\n            clearInterval(timer);\r\n            return 0;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [status, timeLeft]);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const newLang = event.target.value;\r\n    setLanguage(newLang);\r\n    setCode(LANGUAGE_TEMPLATES[newLang]);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    socket.emit('submitSolution', {\r\n      roomId,\r\n      code,\r\n      language\r\n    });\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification(prev => ({ ...prev, open: false }));\r\n  };\r\n\r\n  if (!challenge) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          {challenge.title}\r\n        </Typography>\r\n        <Typography variant=\"body1\" paragraph>\r\n          {challenge.description}\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Examples:\r\n        </Typography>\r\n        {challenge.examples.map((example, index) => (\r\n          <Box key={index} sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n            <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>\r\n              Input: {example.input}\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>\r\n              Output: {example.output}\r\n            </Typography>\r\n          </Box>\r\n        ))}\r\n        <Typography variant=\"h6\" color={timeLeft < 10 ? \"error\" : \"primary\"}>\r\n          Time Left: {timeLeft} seconds\r\n        </Typography>\r\n      </Paper>\r\n\r\n      <FormControl fullWidth sx={{ mb: 2 }}>\r\n        <InputLabel>Programming Language</InputLabel>\r\n        <Select\r\n          value={language}\r\n          onChange={handleLanguageChange}\r\n          label=\"Programming Language\"\r\n        >\r\n          <MenuItem value=\"javascript\">JavaScript</MenuItem>\r\n          <MenuItem value=\"python\">Python</MenuItem>\r\n          <MenuItem value=\"java\">Java</MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n\r\n      <Editor\r\n        height=\"400px\"\r\n        language={language}\r\n        value={code}\r\n        onChange={setCode}\r\n        theme=\"vs-dark\"\r\n        options={{\r\n          minimap: { enabled: false },\r\n          fontSize: 14,\r\n          lineNumbers: 'on',\r\n          automaticLayout: true,\r\n          scrollBeyondLastLine: false,\r\n        }}\r\n      />\r\n\r\n      <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleSubmit}\r\n          disabled={status !== 'started'}\r\n        >\r\n          Submit Solution\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={onExit}\r\n        >\r\n          Exit Challenge\r\n        </Button>\r\n      </Box>\r\n\r\n      {result && (\r\n        <Paper elevation={3} sx={{ mt: 3, p: 3 }}>\r\n          {result.isWinner !== undefined ? (\r\n            <Typography variant=\"h5\" color={result.isWinner ? \"success.main\" : \"error.main\"}>\r\n              {result.isWinner ? \"You Won! ðŸŽ‰\" : \"Better luck next time!\"}\r\n            </Typography>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Test Results:\r\n              </Typography>\r\n              {result.results.map((test, index) => (\r\n                <Box key={index} sx={{ mb: 2, p: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\r\n                  <Typography color={test.passed ? \"success.main\" : \"error.main\"}>\r\n                    Test {index + 1}: {test.passed ? \"Passed âœ“\" : \"Failed âœ—\"}\r\n                  </Typography>\r\n                  <Box sx={{ pl: 2, mt: 1 }}>\r\n                    <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>Input: {test.input}</Typography>\r\n                    <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>Expected: {test.expected}</Typography>\r\n                    {!test.passed && (\r\n                      <Typography variant=\"body2\" sx={{ fontFamily: 'monospace' }}>Got: {test.actual}</Typography>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              ))}\r\n            </>\r\n          )}\r\n        </Paper>\r\n      )}\r\n\r\n      <Snackbar\r\n        open={notification.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseNotification}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\r\n      >\r\n        <Alert onClose={handleCloseNotification} severity={notification.severity}>\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChallengeRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}