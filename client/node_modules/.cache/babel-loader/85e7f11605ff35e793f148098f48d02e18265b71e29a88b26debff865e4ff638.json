{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\Codearena\\\\client\\\\src\\\\components\\\\ChallengeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, Paper, CircularProgress, Select, MenuItem, FormControl, InputLabel, Snackbar, Alert, Grid, Card, CardContent, Chip, Dialog, DialogContent, DialogActions } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport EditorWrapper from './EditorWrapper';\nimport { socket } from '../socket';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChallengeRoom = ({\n  roomId,\n  onExit\n}) => {\n  _s();\n  const [challenge, setChallenge] = useState(null);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [status, setStatus] = useState('waiting');\n  const [result, setResult] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [startTime, setStartTime] = useState(null);\n  const [hasUserTyped, setHasUserTyped] = useState(false);\n  const [gameOverDialog, setGameOverDialog] = useState(false);\n  const [gameResult, setGameResult] = useState(null);\n  const [finalSubmissionTime, setFinalSubmissionTime] = useState(null);\n  const [finalTimeRemaining, setFinalTimeRemaining] = useState(null);\n  const [someoneWon, setSomeoneWon] = useState(false);\n  const isInitialized = React.useRef(false);\n  useEffect(() => {\n    if (!roomId) return;\n    socket.emit('joinChallenge', roomId, response => {\n      if (response.error) {\n        setNotification({\n          open: true,\n          message: response.error,\n          severity: 'error'\n        });\n        onExit();\n        return;\n      }\n      setChallenge(response.challenge);\n      // Only set boilerplate code on first initialization\n      if (!isInitialized.current) {\n        setCode(response.challenge.boilerplateCode[language]);\n        isInitialized.current = true;\n      }\n      if (response.started && response.startTime) {\n        setStatus('started');\n        setStartTime(response.startTime);\n        const elapsed = Math.floor((Date.now() - response.startTime) / 1000);\n        setTimeLeft(Math.max(0, response.challenge.timeLimit - elapsed));\n      }\n    });\n    socket.on('gameStart', ({\n      challenge,\n      startTime\n    }) => {\n      setChallenge(challenge);\n      // Only set boilerplate code on first initialization\n      if (!isInitialized.current) {\n        setCode(challenge.boilerplateCode[language]);\n        isInitialized.current = true;\n      }\n      setStatus('started');\n      setStartTime(startTime);\n      setTimeLeft(challenge.timeLimit);\n      setNotification({\n        open: true,\n        message: 'Game started! Good luck!',\n        severity: 'success'\n      });\n    });\n    socket.on('submissionResult', validation => {\n      setResult(validation);\n      if (validation.error) {\n        setNotification({\n          open: true,\n          message: `Error: ${validation.error}`,\n          severity: 'error'\n        });\n      } else if (validation.passed) {\n        // If this player won, stop their timer immediately and disable submit button\n        setTimeLeft(0);\n        setFinalSubmissionTime(Date.now());\n        setFinalTimeRemaining(0); // This player has no time remaining\n        setSomeoneWon(true);\n        setStatus('finished');\n        setNotification({\n          open: true,\n          message: 'All test cases passed!',\n          severity: 'success'\n        });\n      } else {\n        setNotification({\n          open: true,\n          message: 'Some test cases failed. Check the results below.',\n          severity: 'warning'\n        });\n      }\n    });\n    socket.on('gameOver', ({\n      winnerId,\n      solutions\n    }) => {\n      setStatus('finished');\n      setTimeLeft(0); // Stop the timer\n      setFinalSubmissionTime(Date.now());\n      // Capture the current time remaining for the losing player\n      if (socket.id !== winnerId) {\n        setFinalTimeRemaining(timeLeft);\n      }\n      setSomeoneWon(true);\n      setGameResult({\n        isWinner: socket.id === winnerId,\n        winnerId,\n        solutions\n      });\n      setGameOverDialog(true);\n      setNotification({\n        open: true,\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'HARD LUCK BUDDY!! YOUR OPPONENT HAS WON THE GAME',\n        severity: socket.id === winnerId ? 'success' : 'error'\n      });\n    });\n    socket.on('playerLeft', () => {\n      setNotification({\n        open: true,\n        message: 'Your opponent has left the game',\n        severity: 'warning'\n      });\n      onExit();\n    });\n    return () => {\n      socket.off('gameStart');\n      socket.off('submissionResult');\n      socket.off('gameOver');\n      socket.off('playerLeft');\n    };\n  }, [roomId, onExit, language]);\n  useEffect(() => {\n    let timer;\n    if (status === 'started' && timeLeft > 0 && !someoneWon) {\n      timer = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\n        const remaining = Math.max(0, challenge.timeLimit - elapsed);\n        setTimeLeft(remaining);\n        if (remaining === 0) {\n          setStatus('finished');\n          setNotification({\n            open: true,\n            message: 'Time is up!',\n            severity: 'warning'\n          });\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [status, startTime, challenge, timeLeft, someoneWon]);\n  const handleLanguageChange = event => {\n    const newLang = event.target.value;\n    setLanguage(newLang);\n    // Only reset to boilerplate if user hasn't typed anything yet\n    if (challenge && challenge.boilerplateCode[newLang] && !hasUserTyped) {\n      setCode(challenge.boilerplateCode[newLang]);\n    }\n  };\n  const handleSubmit = () => {\n    if (!code.trim()) {\n      setNotification({\n        open: true,\n        message: 'Please write some code before submitting',\n        severity: 'warning'\n      });\n      return;\n    }\n    setNotification({\n      open: true,\n      message: 'Testing your solution...',\n      severity: 'info'\n    });\n    socket.emit('submitSolution', {\n      roomId,\n      code,\n      language\n    });\n  };\n  const handleCloseNotification = () => {\n    setNotification(prev => ({\n      ...prev,\n      open: false\n    }));\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n  const handleCloseGameOverDialog = () => {\n    setGameOverDialog(false);\n  };\n  if (!challenge) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '100%',\n            overflow: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: challenge.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: challenge.difficulty.toUpperCase(),\n            color: challenge.difficulty === 'easy' ? 'success' : challenge.difficulty === 'medium' ? 'warning' : 'error',\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              whiteSpace: 'pre-line',\n              mb: 2\n            },\n            children: challenge.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Input Format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: challenge.inputFormat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Output Format:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              mb: 2\n            },\n            children: challenge.outputFormat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Constraints:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: challenge.constraints.map((constraint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: constraint\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Examples:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), challenge.examples.map((example, index) => /*#__PURE__*/_jsxDEV(Card, {\n            variant: \"outlined\",\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Input:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontFamily: 'monospace',\n                  mb: 1\n                },\n                children: example.input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Output:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  fontFamily: 'monospace',\n                  mb: 1\n                },\n                children: example.output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                color: \"text.secondary\",\n                children: \"Explanation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  whiteSpace: 'pre-line'\n                },\n                children: example.explanation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 3,\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mb: 2,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              sx: {\n                minWidth: 120\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Language\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: language,\n                onChange: handleLanguageChange,\n                label: \"Language\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"python\",\n                  children: \"Python\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"cpp\",\n                  children: \"C++\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"java\",\n                  children: \"Java\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 2,\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: () => {\n                  if (challenge && challenge.boilerplateCode[language]) {\n                    setCode(challenge.boilerplateCode[language]);\n                    setHasUserTyped(false);\n                    isInitialized.current = false;\n                  }\n                },\n                children: \"Reset Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: timeLeft < 60 ? \"error\" : \"text.primary\",\n                children: [\"Time Left: \", formatTime(timeLeft)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(EditorWrapper, {\n            value: code,\n            onChange: value => {\n              setCode(value || '');\n              // Mark that user has started typing\n              if (!hasUserTyped && value && value.trim() !== '') {\n                setHasUserTyped(true);\n              }\n            },\n            language: language,\n            theme: \"vs-dark\",\n            options: {\n              minimap: {\n                enabled: false\n              },\n              fontSize: 14,\n              lineNumbers: 'on',\n              automaticLayout: true,\n              scrollBeyondLastLine: false,\n              tabSize: 4,\n              wordWrap: 'on',\n              overviewRulerBorder: false,\n              scrollbar: {\n                vertical: 'auto',\n                horizontal: 'auto',\n                verticalScrollbarSize: 10,\n                horizontalScrollbarSize: 10\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2,\n              display: 'flex',\n              justifyContent: 'space-between'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleSubmit,\n              disabled: status !== 'started' || timeLeft === 0 || status === 'finished' || someoneWon,\n              sx: {\n                minWidth: 150\n              },\n              children: status === 'waiting' ? 'Waiting for players...' : timeLeft === 0 ? 'Time is up!' : status === 'finished' || someoneWon ? 'Game Over' : 'Submit Solution'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: onExit,\n              sx: {\n                minWidth: 120\n              },\n              children: \"Exit Challenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), result && result.results && /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              mt: 3,\n              p: 2,\n              bgcolor: 'background.default'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  mr: 1\n                },\n                children: \"Test Results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 19\n              }, this), result.passed ? /*#__PURE__*/_jsxDEV(Chip, {\n                icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 29\n                }, this),\n                label: \"All Tests Passed\",\n                color: \"success\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 29\n                }, this),\n                label: \"Some Tests Failed\",\n                color: \"error\",\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), result.results.map((testResult, index) => /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                mb: 2,\n                borderColor: testResult.passed ? 'success.main' : 'error.main'\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    alignItems: 'center',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    color: testResult.passed ? \"success.main\" : \"error.main\",\n                    children: [\"Test Case \", index + 1]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 421,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    size: \"small\",\n                    label: testResult.passed ? \"Passed\" : \"Failed\",\n                    color: testResult.passed ? \"success\" : \"error\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    pl: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    color: \"text.secondary\",\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1\n                    },\n                    children: testResult.input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    color: \"text.secondary\",\n                    children: \"Expected Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 437,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1\n                    },\n                    children: testResult.expected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 440,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    color: \"text.secondary\",\n                    children: \"Your Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 443,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1\n                    },\n                    children: testResult.actual\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 446,\n                    columnNumber: 25\n                  }, this), testResult.error && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      color: \"error\",\n                      children: \"Error:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 451,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"error\",\n                      sx: {\n                        mb: 1\n                      },\n                      children: testResult.error\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 454,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true), testResult.time && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: [\"Execution time: \", testResult.time, \"ms\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: notification.open,\n      autoHideDuration: 6000,\n      onClose: handleCloseNotification,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseNotification,\n        severity: notification.severity,\n        children: notification.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: gameOverDialog,\n      onClose: handleCloseGameOverDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 3,\n          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n          color: 'white'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n        sx: {\n          textAlign: 'center',\n          py: 4\n        },\n        children: gameResult !== null && gameResult !== void 0 && gameResult.isWinner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(EmojiEventsIcon, {\n            sx: {\n              fontSize: 80,\n              color: '#FFD700',\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            sx: {\n              fontWeight: 'bold',\n              color: '#FFD700'\n            },\n            children: \"\\uD83C\\uDF89 CONGRATULATIONS! \\uD83C\\uDF89\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: \"You Won The Challenge!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 3\n            },\n            children: \"All test cases passed! You've successfully solved the problem and defeated your opponent.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 509,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              bgcolor: 'rgba(255,255,255,0.1)',\n              p: 2,\n              borderRadius: 2,\n              mb: 3,\n              backdropFilter: 'blur(10px)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 1\n              },\n              children: [\"Final Time: \", startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Time Remaining: \", finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SentimentVeryDissatisfiedIcon, {\n            sx: {\n              fontSize: 80,\n              color: '#ff6b6b',\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            sx: {\n              fontWeight: 'bold',\n              color: '#ff6b6b'\n            },\n            children: \"HARD LUCK BUDDY!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2\n            },\n            children: \"YOUR OPPONENT HAS WON THE GAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 3\n            },\n            children: \"Your opponent successfully solved the problem before you. Better luck next time!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              bgcolor: 'rgba(255,255,255,0.1)',\n              p: 2,\n              borderRadius: 2,\n              mb: 3,\n              backdropFilter: 'blur(10px)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 1\n              },\n              children: [\"Final Time: \", startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: [\"Time Remaining: \", finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          justifyContent: 'center',\n          pb: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleCloseGameOverDialog,\n          sx: {\n            bgcolor: 'rgba(255,255,255,0.2)',\n            color: 'white',\n            '&:hover': {\n              bgcolor: 'rgba(255,255,255,0.3)'\n            }\n          },\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengeRoom, \"drIHl1VK9kx9hJ1tZ4NV/qZAzns=\");\n_c = ChallengeRoom;\nexport default ChallengeRoom;\nvar _c;\n$RefreshReg$(_c, \"ChallengeRoom\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Snackbar","Alert","Grid","Card","CardContent","Chip","Dialog","DialogContent","DialogActions","CheckCircleIcon","ErrorIcon","EmojiEventsIcon","SentimentVeryDissatisfiedIcon","EditorWrapper","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","ChallengeRoom","roomId","onExit","_s","challenge","setChallenge","code","setCode","language","setLanguage","status","setStatus","result","setResult","timeLeft","setTimeLeft","notification","setNotification","open","message","severity","startTime","setStartTime","hasUserTyped","setHasUserTyped","gameOverDialog","setGameOverDialog","gameResult","setGameResult","finalSubmissionTime","setFinalSubmissionTime","finalTimeRemaining","setFinalTimeRemaining","someoneWon","setSomeoneWon","isInitialized","useRef","emit","response","error","current","boilerplateCode","started","elapsed","Math","floor","Date","now","max","timeLimit","on","validation","passed","winnerId","solutions","id","isWinner","off","timer","setInterval","remaining","clearInterval","handleLanguageChange","event","newLang","target","value","handleSubmit","trim","handleCloseNotification","prev","formatTime","seconds","minutes","remainingSeconds","toString","padStart","handleCloseGameOverDialog","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","p","container","spacing","item","xs","md","elevation","overflow","variant","gutterBottom","title","label","difficulty","toUpperCase","color","mb","whiteSpace","description","inputFormat","outputFormat","constraints","map","constraint","index","examples","example","fontFamily","input","output","explanation","minWidth","onChange","gap","size","onClick","theme","options","minimap","enabled","fontSize","lineNumbers","automaticLayout","scrollBeyondLastLine","tabSize","wordWrap","overviewRulerBorder","scrollbar","vertical","horizontal","verticalScrollbarSize","horizontalScrollbarSize","mt","disabled","results","bgcolor","mr","icon","testResult","borderColor","pl","expected","actual","time","autoHideDuration","onClose","anchorOrigin","maxWidth","fullWidth","PaperProps","borderRadius","background","textAlign","py","fontWeight","backdropFilter","pb","_c","$RefreshReg$"],"sources":["C:/Users/KALAIVANI/Codearena/client/src/components/ChallengeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Snackbar,\r\n  Alert,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n} from '@mui/material';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport EditorWrapper from './EditorWrapper';\r\nimport { socket } from '../socket';\r\n\r\nconst ChallengeRoom = ({ roomId, onExit }) => {\r\n  const [challenge, setChallenge] = useState(null);\r\n  const [code, setCode] = useState('');\r\n  const [language, setLanguage] = useState('python');\r\n  const [status, setStatus] = useState('waiting');\r\n  const [result, setResult] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [hasUserTyped, setHasUserTyped] = useState(false);\r\n  const [gameOverDialog, setGameOverDialog] = useState(false);\r\n  const [gameResult, setGameResult] = useState(null);\r\n  const [finalSubmissionTime, setFinalSubmissionTime] = useState(null);\r\n  const [finalTimeRemaining, setFinalTimeRemaining] = useState(null);\r\n  const [someoneWon, setSomeoneWon] = useState(false);\r\n  const isInitialized = React.useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n\r\n    socket.emit('joinChallenge', roomId, (response) => {\r\n      if (response.error) {\r\n        setNotification({\r\n          open: true,\r\n          message: response.error,\r\n          severity: 'error'\r\n        });\r\n        onExit();\r\n        return;\r\n      }\r\n      \r\n      setChallenge(response.challenge);\r\n      // Only set boilerplate code on first initialization\r\n      if (!isInitialized.current) {\r\n        setCode(response.challenge.boilerplateCode[language]);\r\n        isInitialized.current = true;\r\n      }\r\n      if (response.started && response.startTime) {\r\n        setStatus('started');\r\n        setStartTime(response.startTime);\r\n        const elapsed = Math.floor((Date.now() - response.startTime) / 1000);\r\n        setTimeLeft(Math.max(0, response.challenge.timeLimit - elapsed));\r\n      }\r\n    });\r\n\r\n    socket.on('gameStart', ({ challenge, startTime }) => {\r\n      setChallenge(challenge);\r\n      // Only set boilerplate code on first initialization\r\n      if (!isInitialized.current) {\r\n        setCode(challenge.boilerplateCode[language]);\r\n        isInitialized.current = true;\r\n      }\r\n      setStatus('started');\r\n      setStartTime(startTime);\r\n      setTimeLeft(challenge.timeLimit);\r\n      setNotification({\r\n        open: true,\r\n        message: 'Game started! Good luck!',\r\n        severity: 'success'\r\n      });\r\n    });\r\n\r\n    socket.on('submissionResult', (validation) => {\r\n      setResult(validation);\r\n      if (validation.error) {\r\n        setNotification({\r\n          open: true,\r\n          message: `Error: ${validation.error}`,\r\n          severity: 'error'\r\n        });\r\n      } else if (validation.passed) {\r\n        // If this player won, stop their timer immediately and disable submit button\r\n        setTimeLeft(0);\r\n        setFinalSubmissionTime(Date.now());\r\n        setFinalTimeRemaining(0); // This player has no time remaining\r\n        setSomeoneWon(true);\r\n        setStatus('finished');\r\n        setNotification({\r\n          open: true,\r\n          message: 'All test cases passed!',\r\n          severity: 'success'\r\n        });\r\n      } else {\r\n        setNotification({\r\n          open: true,\r\n          message: 'Some test cases failed. Check the results below.',\r\n          severity: 'warning'\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on('gameOver', ({ winnerId, solutions }) => {\r\n      setStatus('finished');\r\n      setTimeLeft(0); // Stop the timer\r\n      setFinalSubmissionTime(Date.now());\r\n      // Capture the current time remaining for the losing player\r\n      if (socket.id !== winnerId) {\r\n        setFinalTimeRemaining(timeLeft);\r\n      }\r\n      setSomeoneWon(true);\r\n      setGameResult({\r\n        isWinner: socket.id === winnerId,\r\n        winnerId,\r\n        solutions\r\n      });\r\n      setGameOverDialog(true);\r\n      setNotification({\r\n        open: true,\r\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'HARD LUCK BUDDY!! YOUR OPPONENT HAS WON THE GAME',\r\n        severity: socket.id === winnerId ? 'success' : 'error'\r\n      });\r\n    });\r\n\r\n    socket.on('playerLeft', () => {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Your opponent has left the game',\r\n        severity: 'warning'\r\n      });\r\n      onExit();\r\n    });\r\n\r\n    return () => {\r\n      socket.off('gameStart');\r\n      socket.off('submissionResult');\r\n      socket.off('gameOver');\r\n      socket.off('playerLeft');\r\n    };\r\n  }, [roomId, onExit, language]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (status === 'started' && timeLeft > 0 && !someoneWon) {\r\n      timer = setInterval(() => {\r\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\r\n        const remaining = Math.max(0, challenge.timeLimit - elapsed);\r\n        \r\n        setTimeLeft(remaining);\r\n        \r\n        if (remaining === 0) {\r\n          setStatus('finished');\r\n          setNotification({\r\n            open: true,\r\n            message: 'Time is up!',\r\n            severity: 'warning'\r\n          });\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [status, startTime, challenge, timeLeft, someoneWon]);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const newLang = event.target.value;\r\n    setLanguage(newLang);\r\n    // Only reset to boilerplate if user hasn't typed anything yet\r\n    if (challenge && challenge.boilerplateCode[newLang] && !hasUserTyped) {\r\n      setCode(challenge.boilerplateCode[newLang]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!code.trim()) {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Please write some code before submitting',\r\n        severity: 'warning'\r\n      });\r\n      return;\r\n    }\r\n\r\n    setNotification({\r\n      open: true,\r\n      message: 'Testing your solution...',\r\n      severity: 'info'\r\n    });\r\n\r\n    socket.emit('submitSolution', {\r\n      roomId,\r\n      code,\r\n      language\r\n    });\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification(prev => ({ ...prev, open: false }));\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleCloseGameOverDialog = () => {\r\n    setGameOverDialog(false);\r\n  };\r\n\r\n  if (!challenge) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={4}>\r\n          <Paper elevation={3} sx={{ p: 3, height: '100%', overflow: 'auto' }}>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              {challenge.title}\r\n            </Typography>\r\n            <Chip \r\n              label={challenge.difficulty.toUpperCase()} \r\n              color={\r\n                challenge.difficulty === 'easy' ? 'success' : \r\n                challenge.difficulty === 'medium' ? 'warning' : 'error'\r\n              }\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line', mb: 2 }}>\r\n              {challenge.description}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Input Format:\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n              {challenge.inputFormat}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Output Format:\r\n            </Typography>\r\n            <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n              {challenge.outputFormat}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Constraints:\r\n            </Typography>\r\n            <ul>\r\n              {challenge.constraints.map((constraint, index) => (\r\n                <li key={index}>\r\n                  <Typography variant=\"body2\">{constraint}</Typography>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Examples:\r\n            </Typography>\r\n            {challenge.examples.map((example, index) => (\r\n              <Card key={index} variant=\"outlined\" sx={{ mb: 2 }}>\r\n                <CardContent>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    Input:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                    {example.input}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    Output:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                    {example.output}\r\n                  </Typography>\r\n                  <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                    Explanation:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-line' }}>\r\n                    {example.explanation}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            ))}\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Paper elevation={3} sx={{ p: 3, height: '100%' }}>\r\n            <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n              <FormControl sx={{ minWidth: 120 }}>\r\n                <InputLabel>Language</InputLabel>\r\n                <Select\r\n                  value={language}\r\n                  onChange={handleLanguageChange}\r\n                  label=\"Language\"\r\n                >\r\n                  <MenuItem value=\"python\">Python</MenuItem>\r\n                  <MenuItem value=\"cpp\">C++</MenuItem>\r\n                  <MenuItem value=\"java\">Java</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    if (challenge && challenge.boilerplateCode[language]) {\r\n                      setCode(challenge.boilerplateCode[language]);\r\n                      setHasUserTyped(false);\r\n                      isInitialized.current = false;\r\n                    }\r\n                  }}\r\n                >\r\n                  Reset Code\r\n                </Button>\r\n                {timeLeft !== null && (\r\n                  <Typography variant=\"h6\" color={timeLeft < 60 ? \"error\" : \"text.primary\"}>\r\n                    Time Left: {formatTime(timeLeft)}\r\n                  </Typography>\r\n                )}\r\n              </Box>\r\n            </Box>\r\n\r\n            <EditorWrapper\r\n              value={code}\r\n              onChange={(value) => {\r\n                setCode(value || '');\r\n                // Mark that user has started typing\r\n                if (!hasUserTyped && value && value.trim() !== '') {\r\n                  setHasUserTyped(true);\r\n                }\r\n              }}\r\n              language={language}\r\n              theme=\"vs-dark\"\r\n              options={{\r\n                minimap: { enabled: false },\r\n                fontSize: 14,\r\n                lineNumbers: 'on',\r\n                automaticLayout: true,\r\n                scrollBeyondLastLine: false,\r\n                tabSize: 4,\r\n                wordWrap: 'on',\r\n                overviewRulerBorder: false,\r\n                scrollbar: {\r\n                  vertical: 'auto',\r\n                  horizontal: 'auto',\r\n                  verticalScrollbarSize: 10,\r\n                  horizontalScrollbarSize: 10\r\n                }\r\n              }}\r\n            />\r\n\r\n            <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n                disabled={status !== 'started' || timeLeft === 0 || status === 'finished' || someoneWon}\r\n                sx={{ minWidth: 150 }}\r\n              >\r\n                {status === 'waiting' ? 'Waiting for players...' : \r\n                 timeLeft === 0 ? 'Time is up!' : \r\n                 status === 'finished' || someoneWon ? 'Game Over' :\r\n                 'Submit Solution'}\r\n              </Button>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"secondary\"\r\n                onClick={onExit}\r\n                sx={{ minWidth: 120 }}\r\n              >\r\n                Exit Challenge\r\n              </Button>\r\n            </Box>\r\n\r\n            {result && result.results && (\r\n              <Paper sx={{ mt: 3, p: 2, bgcolor: 'background.default' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                  <Typography variant=\"h6\" sx={{ mr: 1 }}>\r\n                    Test Results\r\n                  </Typography>\r\n                  {result.passed ? (\r\n                    <Chip \r\n                      icon={<CheckCircleIcon />} \r\n                      label=\"All Tests Passed\" \r\n                      color=\"success\" \r\n                      variant=\"outlined\" \r\n                    />\r\n                  ) : (\r\n                    <Chip \r\n                      icon={<ErrorIcon />} \r\n                      label=\"Some Tests Failed\" \r\n                      color=\"error\" \r\n                      variant=\"outlined\" \r\n                    />\r\n                  )}\r\n                </Box>\r\n                {result.results.map((testResult, index) => (\r\n                  <Card key={index} variant=\"outlined\" sx={{ mb: 2, borderColor: testResult.passed ? 'success.main' : 'error.main' }}>\r\n                    <CardContent>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\r\n                        <Typography variant=\"subtitle1\" color={testResult.passed ? \"success.main\" : \"error.main\"}>\r\n                          Test Case {index + 1}\r\n                        </Typography>\r\n                        <Chip \r\n                          size=\"small\"\r\n                          label={testResult.passed ? \"Passed\" : \"Failed\"}\r\n                          color={testResult.passed ? \"success\" : \"error\"}\r\n                        />\r\n                      </Box>\r\n                      <Box sx={{ pl: 2 }}>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Input:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                          {testResult.input}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Expected Output:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                          {testResult.expected}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                          Your Output:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1 }}>\r\n                          {testResult.actual}\r\n                        </Typography>\r\n                        {testResult.error && (\r\n                          <>\r\n                            <Typography variant=\"subtitle2\" color=\"error\">\r\n                              Error:\r\n                            </Typography>\r\n                            <Typography variant=\"body2\" color=\"error\" sx={{ mb: 1 }}>\r\n                              {testResult.error}\r\n                            </Typography>\r\n                          </>\r\n                        )}\r\n                        {testResult.time && (\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            Execution time: {testResult.time}ms\r\n                          </Typography>\r\n                        )}\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n              </Paper>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Snackbar\r\n        open={notification.open}\r\n        autoHideDuration={6000}\r\n        onClose={handleCloseNotification}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Alert onClose={handleCloseNotification} severity={notification.severity}>\r\n          {notification.message}\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      {/* Game Over Dialog */}\r\n      <Dialog\r\n        open={gameOverDialog}\r\n        onClose={handleCloseGameOverDialog}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            borderRadius: 3,\r\n            background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n            color: 'white'\r\n          }\r\n        }}\r\n      >\r\n        <DialogContent sx={{ textAlign: 'center', py: 4 }}>\r\n          {gameResult?.isWinner ? (\r\n            <>\r\n              <EmojiEventsIcon sx={{ fontSize: 80, color: '#FFD700', mb: 2 }} />\r\n              <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: '#FFD700' }}>\r\n                ðŸŽ‰ CONGRATULATIONS! ðŸŽ‰\r\n              </Typography>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                You Won The Challenge!\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 3 }}>\r\n                All test cases passed! You've successfully solved the problem and defeated your opponent.\r\n              </Typography>\r\n              <Box sx={{ \r\n                bgcolor: 'rgba(255,255,255,0.1)', \r\n                p: 2, \r\n                borderRadius: 2, \r\n                mb: 3,\r\n                backdropFilter: 'blur(10px)'\r\n              }}>\r\n                <Typography variant=\"h6\" sx={{ mb: 1 }}>\r\n                  Final Time: {startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A'}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Time Remaining: {finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A'}\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <SentimentVeryDissatisfiedIcon sx={{ fontSize: 80, color: '#ff6b6b', mb: 2 }} />\r\n              <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: '#ff6b6b' }}>\r\n                HARD LUCK BUDDY!!\r\n              </Typography>\r\n              <Typography variant=\"h6\" sx={{ mb: 2 }}>\r\n                YOUR OPPONENT HAS WON THE GAME\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ mb: 3 }}>\r\n                Your opponent successfully solved the problem before you. Better luck next time!\r\n              </Typography>\r\n              <Box sx={{ \r\n                bgcolor: 'rgba(255,255,255,0.1)', \r\n                p: 2, \r\n                borderRadius: 2, \r\n                mb: 3,\r\n                backdropFilter: 'blur(10px)'\r\n              }}>\r\n                <Typography variant=\"h6\" sx={{ mb: 1 }}>\r\n                  Final Time: {startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A'}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  Time Remaining: {finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A'}\r\n                </Typography>\r\n              </Box>\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions sx={{ justifyContent: 'center', pb: 3 }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleCloseGameOverDialog}\r\n            sx={{\r\n              bgcolor: 'rgba(255,255,255,0.2)',\r\n              color: 'white',\r\n              '&:hover': {\r\n                bgcolor: 'rgba(255,255,255,0.3)'\r\n              }\r\n            }}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChallengeRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}