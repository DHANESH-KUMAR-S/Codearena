{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\Codearena\\\\client\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n// Override the global error handler to suppress ResizeObserver errors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst originalError = console.error;\nconst originalWarn = console.warn;\nconsole.error = (...args) => {\n  const errorMessage = args[0];\n  if (errorMessage && typeof errorMessage === 'string') {\n    if (errorMessage.includes('ResizeObserver loop completed with undelivered notifications') || errorMessage.includes('ResizeObserver loop limit exceeded') || errorMessage.includes('ResizeObserver')) {\n      return; // Suppress ResizeObserver related errors\n    }\n  }\n  originalError.apply(console, args);\n};\nconsole.warn = (...args) => {\n  const warnMessage = args[0];\n  if (warnMessage && typeof warnMessage === 'string') {\n    if (warnMessage.includes('ResizeObserver')) {\n      return; // Suppress ResizeObserver related warnings\n    }\n  }\n  originalWarn.apply(console, args);\n};\n\n// Suppress uncaught promise rejections related to ResizeObserver\nwindow.addEventListener('unhandledrejection', event => {\n  if (event.reason && typeof event.reason === 'string' && event.reason.includes('ResizeObserver')) {\n    event.preventDefault();\n    return;\n  }\n});\n\n// Override the global error handler for runtime errors\nwindow.addEventListener('error', event => {\n  if (event.error && event.error.message && event.error.message.includes('ResizeObserver')) {\n    event.preventDefault();\n    return false;\n  }\n});\n\n// Override console.error globally\nconst originalConsoleError = console.error;\nconsole.error = (...args) => {\n  const message = args.join(' ');\n  if (message.includes('ResizeObserver')) {\n    return;\n  }\n  originalConsoleError.apply(console, args);\n};\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","originalError","console","error","originalWarn","warn","args","errorMessage","includes","apply","warnMessage","window","addEventListener","event","reason","preventDefault","message","originalConsoleError","join","root","createRoot","document","getElementById","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/KALAIVANI/Codearena/client/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\n\r\n// Override the global error handler to suppress ResizeObserver errors\r\nconst originalError = console.error;\r\nconst originalWarn = console.warn;\r\n\r\nconsole.error = (...args) => {\r\n  const errorMessage = args[0];\r\n  if (errorMessage && typeof errorMessage === 'string') {\r\n    if (errorMessage.includes('ResizeObserver loop completed with undelivered notifications') ||\r\n        errorMessage.includes('ResizeObserver loop limit exceeded') ||\r\n        errorMessage.includes('ResizeObserver')) {\r\n      return; // Suppress ResizeObserver related errors\r\n    }\r\n  }\r\n  originalError.apply(console, args);\r\n};\r\n\r\nconsole.warn = (...args) => {\r\n  const warnMessage = args[0];\r\n  if (warnMessage && typeof warnMessage === 'string') {\r\n    if (warnMessage.includes('ResizeObserver')) {\r\n      return; // Suppress ResizeObserver related warnings\r\n    }\r\n  }\r\n  originalWarn.apply(console, args);\r\n};\r\n\r\n// Suppress uncaught promise rejections related to ResizeObserver\r\nwindow.addEventListener('unhandledrejection', (event) => {\r\n  if (event.reason && typeof event.reason === 'string' && \r\n      event.reason.includes('ResizeObserver')) {\r\n    event.preventDefault();\r\n    return;\r\n  }\r\n});\r\n\r\n// Override the global error handler for runtime errors\r\nwindow.addEventListener('error', (event) => {\r\n  if (event.error && event.error.message && \r\n      event.error.message.includes('ResizeObserver')) {\r\n    event.preventDefault();\r\n    return false;\r\n  }\r\n});\r\n\r\n// Override console.error globally\r\nconst originalConsoleError = console.error;\r\nconsole.error = (...args) => {\r\n  const message = args.join(' ');\r\n  if (message.includes('ResizeObserver')) {\r\n    return;\r\n  }\r\n  originalConsoleError.apply(console, args);\r\n};\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <App />\r\n); "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAGC,OAAO,CAACC,KAAK;AACnC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAI;AAEjCH,OAAO,CAACC,KAAK,GAAG,CAAC,GAAGG,IAAI,KAAK;EAC3B,MAAMC,YAAY,GAAGD,IAAI,CAAC,CAAC,CAAC;EAC5B,IAAIC,YAAY,IAAI,OAAOA,YAAY,KAAK,QAAQ,EAAE;IACpD,IAAIA,YAAY,CAACC,QAAQ,CAAC,8DAA8D,CAAC,IACrFD,YAAY,CAACC,QAAQ,CAAC,oCAAoC,CAAC,IAC3DD,YAAY,CAACC,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MAC3C,OAAO,CAAC;IACV;EACF;EACAP,aAAa,CAACQ,KAAK,CAACP,OAAO,EAAEI,IAAI,CAAC;AACpC,CAAC;AAEDJ,OAAO,CAACG,IAAI,GAAG,CAAC,GAAGC,IAAI,KAAK;EAC1B,MAAMI,WAAW,GAAGJ,IAAI,CAAC,CAAC,CAAC;EAC3B,IAAII,WAAW,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;IAClD,IAAIA,WAAW,CAACF,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MAC1C,OAAO,CAAC;IACV;EACF;EACAJ,YAAY,CAACK,KAAK,CAACP,OAAO,EAAEI,IAAI,CAAC;AACnC,CAAC;;AAED;AACAK,MAAM,CAACC,gBAAgB,CAAC,oBAAoB,EAAGC,KAAK,IAAK;EACvD,IAAIA,KAAK,CAACC,MAAM,IAAI,OAAOD,KAAK,CAACC,MAAM,KAAK,QAAQ,IAChDD,KAAK,CAACC,MAAM,CAACN,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IAC3CK,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB;EACF;AACF,CAAC,CAAC;;AAEF;AACAJ,MAAM,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;EAC1C,IAAIA,KAAK,CAACV,KAAK,IAAIU,KAAK,CAACV,KAAK,CAACa,OAAO,IAClCH,KAAK,CAACV,KAAK,CAACa,OAAO,CAACR,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IAClDK,KAAK,CAACE,cAAc,CAAC,CAAC;IACtB,OAAO,KAAK;EACd;AACF,CAAC,CAAC;;AAEF;AACA,MAAME,oBAAoB,GAAGf,OAAO,CAACC,KAAK;AAC1CD,OAAO,CAACC,KAAK,GAAG,CAAC,GAAGG,IAAI,KAAK;EAC3B,MAAMU,OAAO,GAAGV,IAAI,CAACY,IAAI,CAAC,GAAG,CAAC;EAC9B,IAAIF,OAAO,CAACR,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IACtC;EACF;EACAS,oBAAoB,CAACR,KAAK,CAACP,OAAO,EAAEI,IAAI,CAAC;AAC3C,CAAC;AAED,MAAMa,IAAI,GAAGtB,QAAQ,CAACuB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,cACTvB,OAAA,CAACF,GAAG;EAAA0B,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}