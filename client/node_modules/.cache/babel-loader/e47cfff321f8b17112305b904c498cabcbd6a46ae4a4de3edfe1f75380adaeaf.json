{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\Codearena\\\\client\\\\src\\\\components\\\\ChallengeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, Paper, CircularProgress, Select, MenuItem, FormControl, InputLabel, Snackbar, Alert, Grid, Card, CardContent, Chip, Dialog, DialogContent, DialogActions, IconButton, Menu, MenuItem as MenuItemComponent, ListItemIcon } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport EditorWrapper from './EditorWrapper';\nimport { socket } from '../socket';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChallengeRoom = ({\n  roomId,\n  onExit,\n  user,\n  onLogout\n}) => {\n  _s();\n  const [challenge, setChallenge] = useState(null);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [status, setStatus] = useState('waiting');\n  const [result, setResult] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(null);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [startTime, setStartTime] = useState(null);\n  const [hasUserTyped, setHasUserTyped] = useState(false);\n  const [gameOverDialog, setGameOverDialog] = useState(false);\n  const [gameResult, setGameResult] = useState(null);\n  const [finalSubmissionTime, setFinalSubmissionTime] = useState(null);\n  const [finalTimeRemaining, setFinalTimeRemaining] = useState(null);\n  const [someoneWon, setSomeoneWon] = useState(false);\n  const [profileAnchorEl, setProfileAnchorEl] = useState(null);\n  const isInitialized = React.useRef(false);\n\n  // Profile menu handlers\n  const handleProfileClick = event => {\n    setProfileAnchorEl(event.currentTarget);\n  };\n  const handleProfileClose = () => {\n    setProfileAnchorEl(null);\n  };\n  const handleLogout = () => {\n    handleProfileClose();\n    onLogout();\n  };\n  useEffect(() => {\n    if (!roomId) return;\n    socket.emit('joinChallenge', roomId, response => {\n      if (response.error) {\n        setNotification({\n          open: true,\n          message: response.error,\n          severity: 'error'\n        });\n        onExit();\n        return;\n      }\n      setChallenge(response.challenge);\n      // Only set boilerplate code on first initialization\n      if (!isInitialized.current) {\n        setCode(response.challenge.boilerplateCode[language]);\n        isInitialized.current = true;\n      }\n      if (response.started && response.startTime) {\n        setStatus('started');\n        setStartTime(response.startTime);\n        const elapsed = Math.floor((Date.now() - response.startTime) / 1000);\n        setTimeLeft(Math.max(0, response.challenge.timeLimit - elapsed));\n      }\n    });\n    socket.on('gameStart', ({\n      challenge,\n      startTime\n    }) => {\n      setChallenge(challenge);\n      // Only set boilerplate code on first initialization\n      if (!isInitialized.current) {\n        setCode(challenge.boilerplateCode[language]);\n        isInitialized.current = true;\n      }\n      setStatus('started');\n      setStartTime(startTime);\n      setTimeLeft(challenge.timeLimit);\n      setSomeoneWon(false); // Reset someoneWon state for new game\n      setFinalTimeRemaining(null); // Reset final time remaining\n      setFinalSubmissionTime(null); // Reset final submission time\n      setGameResult(null); // Reset game result\n      setGameOverDialog(false); // Close any open dialog\n      setNotification({\n        open: true,\n        message: 'Game started! Good luck!',\n        severity: 'success'\n      });\n    });\n    socket.on('submissionResult', validation => {\n      setResult(validation);\n      if (validation.error) {\n        setNotification({\n          open: true,\n          message: `Error: ${validation.error}`,\n          severity: 'error'\n        });\n      } else if (validation.passed) {\n        // If this player won, stop their timer immediately and disable submit button\n        const currentTimeRemaining = timeLeft; // Capture current time remaining before setting to 0\n        setTimeLeft(0);\n        setFinalSubmissionTime(Date.now());\n        setFinalTimeRemaining(currentTimeRemaining); // Store the actual time remaining when they won\n        setSomeoneWon(true);\n        setStatus('finished');\n        setNotification({\n          open: true,\n          message: 'All test cases passed!',\n          severity: 'success'\n        });\n      } else {\n        setNotification({\n          open: true,\n          message: 'Some test cases failed. Check the results below.',\n          severity: 'warning'\n        });\n      }\n    });\n    socket.on('gameOver', ({\n      winnerId,\n      solutions\n    }) => {\n      setStatus('finished');\n      setTimeLeft(0); // Stop the timer\n      setFinalSubmissionTime(Date.now());\n      // Capture the current time remaining for the losing player\n      if (socket.id !== winnerId) {\n        setFinalTimeRemaining(timeLeft);\n      }\n      setSomeoneWon(true);\n      setGameResult({\n        isWinner: socket.id === winnerId,\n        winnerId,\n        solutions\n      });\n      setGameOverDialog(true);\n      setNotification({\n        open: true,\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'HARD LUCK BUDDY!! YOUR OPPONENT HAS WON THE GAME',\n        severity: socket.id === winnerId ? 'success' : 'error'\n      });\n    });\n    socket.on('playerLeft', () => {\n      setNotification({\n        open: true,\n        message: 'Your opponent has left the game',\n        severity: 'warning'\n      });\n      onExit();\n    });\n    return () => {\n      socket.off('gameStart');\n      socket.off('submissionResult');\n      socket.off('gameOver');\n      socket.off('playerLeft');\n    };\n  }, [roomId, onExit, language]);\n  useEffect(() => {\n    let timer;\n    if (status === 'started' && timeLeft > 0 && !someoneWon) {\n      timer = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\n        const remaining = Math.max(0, challenge.timeLimit - elapsed);\n        setTimeLeft(remaining);\n        if (remaining === 0) {\n          setStatus('finished');\n          setNotification({\n            open: true,\n            message: 'Time is up!',\n            severity: 'warning'\n          });\n        }\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [status, startTime, challenge, someoneWon]);\n  const handleLanguageChange = event => {\n    const newLang = event.target.value;\n    setLanguage(newLang);\n    // Only reset to boilerplate if user hasn't typed anything yet\n    if (challenge && challenge.boilerplateCode[newLang] && !hasUserTyped) {\n      setCode(challenge.boilerplateCode[newLang]);\n    }\n  };\n  const handleSubmit = () => {\n    if (!code.trim()) {\n      setNotification({\n        open: true,\n        message: 'Please write some code before submitting',\n        severity: 'warning'\n      });\n      return;\n    }\n    socket.emit('submitSolution', {\n      roomId,\n      code,\n      language\n    });\n  };\n  const handleCloseNotification = () => {\n    setNotification({\n      ...notification,\n      open: false\n    });\n  };\n  const formatTime = seconds => {\n    if (seconds === null || seconds === undefined) return '0:00';\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleCloseGameOverDialog = () => {\n    setGameOverDialog(false);\n  };\n  if (!challenge) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glow-orb glow-orb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glow-orb glow-orb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glow-orb glow-orb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        sx: {\n          position: 'relative',\n          zIndex: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          sx: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glow-orb glow-orb-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glow-orb glow-orb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glow-orb glow-orb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        height: '70px',\n        background: 'rgba(255, 255, 255, 0.1)',\n        backdropFilter: 'blur(20px)',\n        borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 30px',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/logo.png\",\n          alt: \"Code Arena\",\n          style: {\n            height: '40px',\n            width: 'auto',\n            filter: 'drop-shadow(0 0 10px rgba(102, 126, 234, 0.6))'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'rgba(255, 255, 255, 0.9)',\n            fontWeight: 500,\n            fontSize: '16px'\n          },\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleProfileClick,\n          sx: {\n            color: 'rgba(255, 255, 255, 0.9)',\n            background: 'rgba(255, 255, 255, 0.1)',\n            border: '1px solid rgba(255, 255, 255, 0.2)',\n            '&:hover': {\n              background: 'rgba(255, 255, 255, 0.2)',\n              transform: 'scale(1.05)'\n            },\n            transition: 'all 0.2s ease'\n          },\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            sx: {\n              fontSize: 28\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: profileAnchorEl,\n        open: Boolean(profileAnchorEl),\n        onClose: handleProfileClose,\n        PaperProps: {\n          sx: {\n            background: 'rgba(255, 255, 255, 0.95)',\n            backdropFilter: 'blur(20px)',\n            border: '1px solid rgba(255, 255, 255, 0.3)',\n            borderRadius: 2,\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n            mt: 1\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuItemComponent, {\n          onClick: handleLogout,\n          sx: {\n            minWidth: 150\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(LogoutIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        paddingTop: '90px',\n        minHeight: '100vh',\n        position: 'relative',\n        zIndex: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 3,\n              height: '100%',\n              overflow: 'auto',\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(20px)',\n              border: '1px solid rgba(255, 255, 255, 0.2)',\n              color: 'rgba(255, 255, 255, 0.9)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              sx: {\n                color: 'rgba(255, 255, 255, 0.95)'\n              },\n              children: challenge.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                gap: 1,\n                mb: 2,\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                label: challenge.difficulty.toUpperCase(),\n                color: challenge.difficulty === 'easy' ? 'success' : challenge.difficulty === 'medium' ? 'warning' : 'error'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: \"AI Generated\",\n                color: \"primary\",\n                size: \"small\",\n                icon: /*#__PURE__*/_jsxDEV(AutoAwesomeIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 25\n                }, this),\n                sx: {\n                  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                  color: 'white',\n                  fontSize: '0.75rem'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                whiteSpace: 'pre-line',\n                mb: 2,\n                color: 'rgba(255, 255, 255, 0.8)'\n              },\n              children: challenge.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                color: 'rgba(255, 255, 255, 0.95)'\n              },\n              children: \"Input Format:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 2,\n                color: 'rgba(255, 255, 255, 0.8)'\n              },\n              children: challenge.inputFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                color: 'rgba(255, 255, 255, 0.95)'\n              },\n              children: \"Output Format:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 2,\n                color: 'rgba(255, 255, 255, 0.8)'\n              },\n              children: challenge.outputFormat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                color: 'rgba(255, 255, 255, 0.95)'\n              },\n              children: \"Constraints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                color: 'rgba(255, 255, 255, 0.8)'\n              },\n              children: challenge.constraints.map((constraint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: constraint\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                color: 'rgba(255, 255, 255, 0.95)'\n              },\n              children: \"Examples:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), challenge.examples.map((example, index) => /*#__PURE__*/_jsxDEV(Card, {\n              variant: \"outlined\",\n              sx: {\n                mb: 2,\n                background: 'rgba(255, 255, 255, 0.05)',\n                borderColor: 'rgba(255, 255, 255, 0.2)',\n                color: 'rgba(255, 255, 255, 0.9)'\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.7)'\n                  },\n                  children: \"Input:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    fontFamily: 'monospace',\n                    mb: 1,\n                    color: 'rgba(255, 255, 255, 0.9)'\n                  },\n                  children: example.input\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.7)'\n                  },\n                  children: \"Output:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    fontFamily: 'monospace',\n                    mb: 1,\n                    color: 'rgba(255, 255, 255, 0.9)'\n                  },\n                  children: example.output\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.7)'\n                  },\n                  children: \"Explanation:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    whiteSpace: 'pre-line',\n                    color: 'rgba(255, 255, 255, 0.8)'\n                  },\n                  children: example.explanation\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 19\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 3,\n              height: '100%',\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(20px)',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  minWidth: 120\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.8)'\n                  },\n                  children: \"Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: language,\n                  onChange: handleLanguageChange,\n                  label: \"Language\",\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.9)',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.3)'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.5)'\n                    },\n                    '& .MuiSvgIcon-root': {\n                      color: 'rgba(255, 255, 255, 0.8)'\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"python\",\n                    children: \"Python\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"cpp\",\n                    children: \"C++\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"java\",\n                    children: \"Java\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2,\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => {\n                    if (challenge && challenge.boilerplateCode[language]) {\n                      setCode(challenge.boilerplateCode[language]);\n                      setHasUserTyped(false);\n                      isInitialized.current = false;\n                    }\n                  },\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.9)',\n                    borderColor: 'rgba(255, 255, 255, 0.3)',\n                    '&:hover': {\n                      borderColor: 'rgba(255, 255, 255, 0.5)',\n                      background: 'rgba(255, 255, 255, 0.1)'\n                    }\n                  },\n                  children: \"Reset Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 19\n                }, this), timeLeft !== null && /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: (someoneWon ? finalTimeRemaining : timeLeft) < 60 ? \"#ff6b6b\" : \"rgba(255, 255, 255, 0.9)\",\n                    fontWeight: 600\n                  },\n                  children: [someoneWon ? 'Game Over - ' : '', \"Time Left: \", someoneWon ? formatTime(finalTimeRemaining) : formatTime(timeLeft)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditorWrapper, {\n              value: code,\n              onChange: value => {\n                setCode(value || '');\n                // Mark that user has started typing\n                if (!hasUserTyped && value && value.trim() !== '') {\n                  setHasUserTyped(true);\n                }\n              },\n              language: language,\n              theme: \"vs-dark\",\n              options: {\n                minimap: {\n                  enabled: false\n                },\n                fontSize: 14,\n                lineNumbers: 'on',\n                automaticLayout: true,\n                scrollBeyondLastLine: false,\n                tabSize: 4,\n                wordWrap: 'on',\n                overviewRulerBorder: false,\n                scrollbar: {\n                  vertical: 'auto',\n                  horizontal: 'auto',\n                  verticalScrollbarSize: 10,\n                  horizontalScrollbarSize: 10\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: handleSubmit,\n                disabled: status !== 'started' || timeLeft === 0 || status === 'finished' || someoneWon,\n                sx: {\n                  minWidth: 150,\n                  background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                  color: 'white',\n                  '&:hover': {\n                    background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)'\n                  },\n                  '&:disabled': {\n                    background: 'rgba(255, 255, 255, 0.2)',\n                    color: 'rgba(255, 255, 255, 0.5)'\n                  }\n                },\n                children: status === 'waiting' ? 'Waiting for players...' : timeLeft === 0 ? 'Time is up!' : status === 'finished' || someoneWon ? 'Game Over' : 'Submit Solution'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 569,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: onExit,\n                sx: {\n                  minWidth: 120,\n                  color: 'rgba(255, 255, 255, 0.9)',\n                  borderColor: 'rgba(255, 255, 255, 0.3)',\n                  '&:hover': {\n                    borderColor: 'rgba(255, 255, 255, 0.5)',\n                    background: 'rgba(255, 255, 255, 0.1)'\n                  }\n                },\n                children: \"Exit Challenge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 15\n            }, this), result && result.results && /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                mt: 3,\n                p: 2,\n                background: 'rgba(255, 255, 255, 0.05)',\n                border: '1px solid rgba(255, 255, 255, 0.2)',\n                color: 'rgba(255, 255, 255, 0.9)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    mr: 1,\n                    color: 'rgba(255, 255, 255, 0.95)'\n                  },\n                  children: \"Test Results\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 21\n                }, this), result.passed ? /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 622,\n                    columnNumber: 31\n                  }, this),\n                  label: \"All Tests Passed\",\n                  color: \"success\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 629,\n                    columnNumber: 31\n                  }, this),\n                  label: \"Some Tests Failed\",\n                  color: \"error\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 19\n              }, this), result.results.map((testResult, index) => /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                sx: {\n                  mb: 2,\n                  borderColor: testResult.passed ? 'success.main' : 'error.main',\n                  background: 'rgba(255, 255, 255, 0.05)',\n                  color: 'rgba(255, 255, 255, 0.9)'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      mb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      color: testResult.passed ? \"success.main\" : \"error.main\",\n                      children: [\"Test Case \", index + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 649,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: testResult.passed ? \"Passed\" : \"Failed\",\n                      color: testResult.passed ? \"success\" : \"error\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 652,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      pl: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: \"Input:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 659,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontFamily: 'monospace',\n                        mb: 1,\n                        color: 'rgba(255, 255, 255, 0.9)'\n                      },\n                      children: testResult.input\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 662,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: \"Expected Output:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 665,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontFamily: 'monospace',\n                        mb: 1,\n                        color: 'rgba(255, 255, 255, 0.9)'\n                      },\n                      children: testResult.expected\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 668,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: \"Your Output:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 671,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontFamily: 'monospace',\n                        mb: 1,\n                        color: 'rgba(255, 255, 255, 0.9)'\n                      },\n                      children: testResult.actual\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 674,\n                      columnNumber: 27\n                    }, this), testResult.error && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        color: \"error\",\n                        children: \"Error:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 679,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"error\",\n                        sx: {\n                          mb: 1\n                        },\n                        children: testResult.error\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 682,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true), testResult.time && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: [\"Execution time: \", testResult.time, \"ms\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 688,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 658,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: notification.open,\n        autoHideDuration: 6000,\n        onClose: handleCloseNotification,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseNotification,\n          severity: notification.severity,\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: gameOverDialog,\n        onClose: handleCloseGameOverDialog,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        PaperProps: {\n          sx: {\n            borderRadius: 3,\n            background: 'rgba(255, 255, 255, 0.95)',\n            backdropFilter: 'blur(20px)',\n            border: '1px solid rgba(255, 255, 255, 0.3)',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          sx: {\n            textAlign: 'center',\n            py: 4\n          },\n          children: gameResult !== null && gameResult !== void 0 && gameResult.isWinner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(EmojiEventsIcon, {\n              sx: {\n                fontSize: 80,\n                color: '#FFD700',\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              sx: {\n                fontWeight: 'bold',\n                color: '#FFD700'\n              },\n              children: \"\\uD83C\\uDF89 CONGRATULATIONS! \\uD83C\\uDF89\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2,\n                color: '#333'\n              },\n              children: \"You Won The Challenge!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 3,\n                color: '#666'\n              },\n              children: \"All test cases passed! You've successfully solved the problem and defeated your opponent.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'rgba(102, 126, 234, 0.1)',\n                p: 2,\n                borderRadius: 2,\n                mb: 3,\n                border: '1px solid rgba(102, 126, 234, 0.2)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  mb: 1,\n                  color: '#333'\n                },\n                children: [\"Final Time: \", startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: '#666'\n                },\n                children: [\"Time Remaining: \", finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(SentimentVeryDissatisfiedIcon, {\n              sx: {\n                fontSize: 80,\n                color: '#ff6b6b',\n                mb: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 759,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              gutterBottom: true,\n              sx: {\n                fontWeight: 'bold',\n                color: '#ff6b6b'\n              },\n              children: \"HARD LUCK BUDDY!!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 2,\n                color: '#333'\n              },\n              children: \"YOUR OPPONENT HAS WON THE GAME\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                mb: 3,\n                color: '#666'\n              },\n              children: \"Your opponent successfully solved the problem before you. Better luck next time!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                bgcolor: 'rgba(240, 147, 251, 0.1)',\n                p: 2,\n                borderRadius: 2,\n                mb: 3,\n                border: '1px solid rgba(240, 147, 251, 0.2)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  mb: 1,\n                  color: '#333'\n                },\n                children: [\"Final Time: \", startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 776,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  color: '#666'\n                },\n                children: [\"Time Remaining: \", finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          sx: {\n            justifyContent: 'center',\n            pb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleCloseGameOverDialog,\n            sx: {\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n              color: 'white',\n              '&:hover': {\n                background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)'\n              }\n            },\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(ChallengeRoom, \"JtayMFqdjiHT6g5R2yPl68PRNvs=\");\n_c = ChallengeRoom;\nexport default ChallengeRoom;\nvar _c;\n$RefreshReg$(_c, \"ChallengeRoom\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Snackbar","Alert","Grid","Card","CardContent","Chip","Dialog","DialogContent","DialogActions","IconButton","Menu","MenuItemComponent","ListItemIcon","CheckCircleIcon","ErrorIcon","EmojiEventsIcon","SentimentVeryDissatisfiedIcon","AccountCircleIcon","LogoutIcon","EditorWrapper","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","ChallengeRoom","roomId","onExit","user","onLogout","_s","challenge","setChallenge","code","setCode","language","setLanguage","status","setStatus","result","setResult","timeLeft","setTimeLeft","notification","setNotification","open","message","severity","startTime","setStartTime","hasUserTyped","setHasUserTyped","gameOverDialog","setGameOverDialog","gameResult","setGameResult","finalSubmissionTime","setFinalSubmissionTime","finalTimeRemaining","setFinalTimeRemaining","someoneWon","setSomeoneWon","profileAnchorEl","setProfileAnchorEl","isInitialized","useRef","handleProfileClick","event","currentTarget","handleProfileClose","handleLogout","emit","response","error","current","boilerplateCode","started","elapsed","Math","floor","Date","now","max","timeLimit","on","validation","passed","currentTimeRemaining","winnerId","solutions","id","isWinner","off","timer","setInterval","remaining","clearInterval","handleLanguageChange","newLang","target","value","handleSubmit","trim","handleCloseNotification","formatTime","seconds","undefined","mins","secs","toString","padStart","handleCloseGameOverDialog","className","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","height","sx","position","zIndex","color","top","left","right","background","backdropFilter","borderBottom","padding","src","alt","style","width","filter","gap","fontWeight","fontSize","username","onClick","border","transform","transition","anchorEl","Boolean","onClose","PaperProps","borderRadius","boxShadow","mt","minWidth","p","paddingTop","minHeight","container","spacing","item","xs","md","elevation","overflow","variant","gutterBottom","title","mb","flexWrap","label","difficulty","toUpperCase","size","icon","AutoAwesomeIcon","whiteSpace","description","inputFormat","outputFormat","constraints","map","constraint","index","examples","example","borderColor","fontFamily","input","output","explanation","onChange","theme","options","minimap","enabled","lineNumbers","automaticLayout","scrollBeyondLastLine","tabSize","wordWrap","overviewRulerBorder","scrollbar","vertical","horizontal","verticalScrollbarSize","horizontalScrollbarSize","disabled","results","mr","testResult","pl","expected","actual","time","autoHideDuration","anchorOrigin","maxWidth","fullWidth","textAlign","py","bgcolor","pb","_c","$RefreshReg$"],"sources":["C:/Users/KALAIVANI/Codearena/client/src/components/ChallengeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Snackbar,\r\n  Alert,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem as MenuItemComponent,\r\n  ListItemIcon,\r\n} from '@mui/material';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\r\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport EditorWrapper from './EditorWrapper';\r\nimport { socket } from '../socket';\r\nimport './Login.css';\r\n\r\nconst ChallengeRoom = ({ roomId, onExit, user, onLogout }) => {\r\n  const [challenge, setChallenge] = useState(null);\r\n  const [code, setCode] = useState('');\r\n  const [language, setLanguage] = useState('python');\r\n  const [status, setStatus] = useState('waiting');\r\n  const [result, setResult] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(null);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [hasUserTyped, setHasUserTyped] = useState(false);\r\n  const [gameOverDialog, setGameOverDialog] = useState(false);\r\n  const [gameResult, setGameResult] = useState(null);\r\n  const [finalSubmissionTime, setFinalSubmissionTime] = useState(null);\r\n  const [finalTimeRemaining, setFinalTimeRemaining] = useState(null);\r\n  const [someoneWon, setSomeoneWon] = useState(false);\r\n  const [profileAnchorEl, setProfileAnchorEl] = useState(null);\r\n  const isInitialized = React.useRef(false);\r\n\r\n  // Profile menu handlers\r\n  const handleProfileClick = (event) => {\r\n    setProfileAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileClose = () => {\r\n    setProfileAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    handleProfileClose();\r\n    onLogout();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n\r\n    socket.emit('joinChallenge', roomId, (response) => {\r\n      if (response.error) {\r\n        setNotification({\r\n          open: true,\r\n          message: response.error,\r\n          severity: 'error'\r\n        });\r\n        onExit();\r\n        return;\r\n      }\r\n      \r\n      setChallenge(response.challenge);\r\n      // Only set boilerplate code on first initialization\r\n      if (!isInitialized.current) {\r\n        setCode(response.challenge.boilerplateCode[language]);\r\n        isInitialized.current = true;\r\n      }\r\n      if (response.started && response.startTime) {\r\n        setStatus('started');\r\n        setStartTime(response.startTime);\r\n        const elapsed = Math.floor((Date.now() - response.startTime) / 1000);\r\n        setTimeLeft(Math.max(0, response.challenge.timeLimit - elapsed));\r\n      }\r\n    });\r\n\r\n    socket.on('gameStart', ({ challenge, startTime }) => {\r\n      setChallenge(challenge);\r\n      // Only set boilerplate code on first initialization\r\n      if (!isInitialized.current) {\r\n        setCode(challenge.boilerplateCode[language]);\r\n        isInitialized.current = true;\r\n      }\r\n      setStatus('started');\r\n      setStartTime(startTime);\r\n      setTimeLeft(challenge.timeLimit);\r\n      setSomeoneWon(false); // Reset someoneWon state for new game\r\n      setFinalTimeRemaining(null); // Reset final time remaining\r\n      setFinalSubmissionTime(null); // Reset final submission time\r\n      setGameResult(null); // Reset game result\r\n      setGameOverDialog(false); // Close any open dialog\r\n      setNotification({\r\n        open: true,\r\n        message: 'Game started! Good luck!',\r\n        severity: 'success'\r\n      });\r\n    });\r\n\r\n    socket.on('submissionResult', (validation) => {\r\n      setResult(validation);\r\n      if (validation.error) {\r\n        setNotification({\r\n          open: true,\r\n          message: `Error: ${validation.error}`,\r\n          severity: 'error'\r\n        });\r\n      } else if (validation.passed) {\r\n        // If this player won, stop their timer immediately and disable submit button\r\n        const currentTimeRemaining = timeLeft; // Capture current time remaining before setting to 0\r\n        setTimeLeft(0);\r\n        setFinalSubmissionTime(Date.now());\r\n        setFinalTimeRemaining(currentTimeRemaining); // Store the actual time remaining when they won\r\n        setSomeoneWon(true);\r\n        setStatus('finished');\r\n        setNotification({\r\n          open: true,\r\n          message: 'All test cases passed!',\r\n          severity: 'success'\r\n        });\r\n      } else {\r\n        setNotification({\r\n          open: true,\r\n          message: 'Some test cases failed. Check the results below.',\r\n          severity: 'warning'\r\n        });\r\n      }\r\n    });\r\n\r\n    socket.on('gameOver', ({ winnerId, solutions }) => {\r\n      setStatus('finished');\r\n      setTimeLeft(0); // Stop the timer\r\n      setFinalSubmissionTime(Date.now());\r\n      // Capture the current time remaining for the losing player\r\n      if (socket.id !== winnerId) {\r\n        setFinalTimeRemaining(timeLeft);\r\n      }\r\n      setSomeoneWon(true);\r\n      setGameResult({\r\n        isWinner: socket.id === winnerId,\r\n        winnerId,\r\n        solutions\r\n      });\r\n      setGameOverDialog(true);\r\n      setNotification({\r\n        open: true,\r\n        message: socket.id === winnerId ? 'Congratulations! You won! ðŸŽ‰' : 'HARD LUCK BUDDY!! YOUR OPPONENT HAS WON THE GAME',\r\n        severity: socket.id === winnerId ? 'success' : 'error'\r\n      });\r\n    });\r\n\r\n    socket.on('playerLeft', () => {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Your opponent has left the game',\r\n        severity: 'warning'\r\n      });\r\n      onExit();\r\n    });\r\n\r\n    return () => {\r\n      socket.off('gameStart');\r\n      socket.off('submissionResult');\r\n      socket.off('gameOver');\r\n      socket.off('playerLeft');\r\n    };\r\n  }, [roomId, onExit, language]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (status === 'started' && timeLeft > 0 && !someoneWon) {\r\n      timer = setInterval(() => {\r\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\r\n        const remaining = Math.max(0, challenge.timeLimit - elapsed);\r\n        \r\n        setTimeLeft(remaining);\r\n        \r\n        if (remaining === 0) {\r\n          setStatus('finished');\r\n          setNotification({\r\n            open: true,\r\n            message: 'Time is up!',\r\n            severity: 'warning'\r\n          });\r\n        }\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [status, startTime, challenge, someoneWon]);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const newLang = event.target.value;\r\n    setLanguage(newLang);\r\n    // Only reset to boilerplate if user hasn't typed anything yet\r\n    if (challenge && challenge.boilerplateCode[newLang] && !hasUserTyped) {\r\n      setCode(challenge.boilerplateCode[newLang]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!code.trim()) {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Please write some code before submitting',\r\n        severity: 'warning'\r\n      });\r\n      return;\r\n    }\r\n\r\n    socket.emit('submitSolution', {\r\n      roomId,\r\n      code,\r\n      language\r\n    });\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification({ ...notification, open: false });\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    if (seconds === null || seconds === undefined) return '0:00';\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleCloseGameOverDialog = () => {\r\n    setGameOverDialog(false);\r\n  };\r\n\r\n  if (!challenge) {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-background\">\r\n          <div className=\"glow-orb glow-orb-1\"></div>\r\n          <div className=\"glow-orb glow-orb-2\"></div>\r\n          <div className=\"glow-orb glow-orb-3\"></div>\r\n        </div>\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\" sx={{ position: 'relative', zIndex: 2 }}>\r\n          <CircularProgress sx={{ color: 'white' }} />\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      {/* Background with glow orbs */}\r\n      <div className=\"auth-background\">\r\n        <div className=\"glow-orb glow-orb-1\"></div>\r\n        <div className=\"glow-orb glow-orb-2\"></div>\r\n        <div className=\"glow-orb glow-orb-3\"></div>\r\n      </div>\r\n\r\n      {/* Status Bar */}\r\n      <Box\r\n        sx={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: '70px',\r\n          background: 'rgba(255, 255, 255, 0.1)',\r\n          backdropFilter: 'blur(20px)',\r\n          borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          padding: '0 30px',\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        {/* Logo */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <img \r\n            src=\"/logo.png\" \r\n            alt=\"Code Arena\" \r\n            style={{\r\n              height: '40px',\r\n              width: 'auto',\r\n              filter: 'drop-shadow(0 0 10px rgba(102, 126, 234, 0.6))',\r\n            }}\r\n          />\r\n        </Box>\r\n\r\n        {/* Profile Section */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n          <Typography\r\n            sx={{\r\n              color: 'rgba(255, 255, 255, 0.9)',\r\n              fontWeight: 500,\r\n              fontSize: '16px',\r\n            }}\r\n          >\r\n            Welcome, {user?.username}!\r\n          </Typography>\r\n          <IconButton\r\n            onClick={handleProfileClick}\r\n            sx={{\r\n              color: 'rgba(255, 255, 255, 0.9)',\r\n              background: 'rgba(255, 255, 255, 0.1)',\r\n              border: '1px solid rgba(255, 255, 255, 0.2)',\r\n              '&:hover': {\r\n                background: 'rgba(255, 255, 255, 0.2)',\r\n                transform: 'scale(1.05)',\r\n              },\r\n              transition: 'all 0.2s ease',\r\n            }}\r\n          >\r\n            <AccountCircleIcon sx={{ fontSize: 28 }} />\r\n          </IconButton>\r\n        </Box>\r\n\r\n        {/* Profile Menu */}\r\n        <Menu\r\n          anchorEl={profileAnchorEl}\r\n          open={Boolean(profileAnchorEl)}\r\n          onClose={handleProfileClose}\r\n          PaperProps={{\r\n            sx: {\r\n              background: 'rgba(255, 255, 255, 0.95)',\r\n              backdropFilter: 'blur(20px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.3)',\r\n              borderRadius: 2,\r\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\r\n              mt: 1,\r\n            }\r\n          }}\r\n        >\r\n          <MenuItemComponent onClick={handleLogout} sx={{ minWidth: 150 }}>\r\n            <ListItemIcon>\r\n              <LogoutIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <Typography>Logout</Typography>\r\n          </MenuItemComponent>\r\n        </Menu>\r\n      </Box>\r\n\r\n      {/* Main Content */}\r\n      <Box sx={{ \r\n        p: 3, \r\n        paddingTop: '90px', \r\n        minHeight: '100vh',\r\n        position: 'relative',\r\n        zIndex: 2,\r\n      }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Paper \r\n              elevation={0}\r\n              sx={{ \r\n                p: 3, \r\n                height: '100%', \r\n                overflow: 'auto',\r\n                background: 'rgba(255, 255, 255, 0.1)',\r\n                backdropFilter: 'blur(20px)',\r\n                border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                color: 'rgba(255, 255, 255, 0.9)',\r\n              }}\r\n            >\r\n              <Typography variant=\"h5\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                {challenge.title}\r\n              </Typography>\r\n              <Box sx={{ display: 'flex', gap: 1, mb: 2, flexWrap: 'wrap' }}>\r\n                <Chip \r\n                  label={challenge.difficulty.toUpperCase()} \r\n                  color={\r\n                    challenge.difficulty === 'easy' ? 'success' : \r\n                    challenge.difficulty === 'medium' ? 'warning' : 'error'\r\n                  }\r\n                />\r\n                <Chip \r\n                  label=\"AI Generated\" \r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  icon={<AutoAwesomeIcon />}\r\n                  sx={{ \r\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                    color: 'white',\r\n                    fontSize: '0.75rem',\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line', mb: 2, color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                {challenge.description}\r\n              </Typography>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                Input Format:\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 2, color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                {challenge.inputFormat}\r\n              </Typography>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                Output Format:\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 2, color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                {challenge.outputFormat}\r\n              </Typography>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                Constraints:\r\n              </Typography>\r\n              <ul style={{ color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                {challenge.constraints.map((constraint, index) => (\r\n                  <li key={index}>\r\n                    <Typography variant=\"body2\">{constraint}</Typography>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                Examples:\r\n              </Typography>\r\n              {challenge.examples.map((example, index) => (\r\n                <Card \r\n                  key={index} \r\n                  variant=\"outlined\" \r\n                  sx={{ \r\n                    mb: 2,\r\n                    background: 'rgba(255, 255, 255, 0.05)',\r\n                    borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                    color: 'rgba(255, 255, 255, 0.9)',\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                      Input:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                      {example.input}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                      Output:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                      {example.output}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                      Explanation:\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-line', color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                      {example.explanation}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              ))}\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8}>\r\n            <Paper \r\n              elevation={0}\r\n              sx={{ \r\n                p: 3, \r\n                height: '100%',\r\n                background: 'rgba(255, 255, 255, 0.1)',\r\n                backdropFilter: 'blur(20px)',\r\n                border: '1px solid rgba(255, 255, 255, 0.2)',\r\n              }}\r\n            >\r\n              <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <FormControl sx={{ minWidth: 120 }}>\r\n                  <InputLabel sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>Language</InputLabel>\r\n                  <Select\r\n                    value={language}\r\n                    onChange={handleLanguageChange}\r\n                    label=\"Language\"\r\n                    sx={{\r\n                      color: 'rgba(255, 255, 255, 0.9)',\r\n                      '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                      },\r\n                      '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                      },\r\n                      '& .MuiSvgIcon-root': {\r\n                        color: 'rgba(255, 255, 255, 0.8)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"python\">Python</MenuItem>\r\n                    <MenuItem value=\"cpp\">C++</MenuItem>\r\n                    <MenuItem value=\"java\">Java</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      if (challenge && challenge.boilerplateCode[language]) {\r\n                        setCode(challenge.boilerplateCode[language]);\r\n                        setHasUserTyped(false);\r\n                        isInitialized.current = false;\r\n                      }\r\n                    }}\r\n                    sx={{\r\n                      color: 'rgba(255, 255, 255, 0.9)',\r\n                      borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                      '&:hover': {\r\n                        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                        background: 'rgba(255, 255, 255, 0.1)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    Reset Code\r\n                  </Button>\r\n                  {timeLeft !== null && (\r\n                    <Typography \r\n                      variant=\"h6\" \r\n                      sx={{ \r\n                        color: (someoneWon ? finalTimeRemaining : timeLeft) < 60 ? \"#ff6b6b\" : \"rgba(255, 255, 255, 0.9)\",\r\n                        fontWeight: 600,\r\n                      }}\r\n                    >\r\n                      {someoneWon ? 'Game Over - ' : ''}Time Left: {someoneWon ? formatTime(finalTimeRemaining) : formatTime(timeLeft)}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n\r\n              <EditorWrapper\r\n                value={code}\r\n                onChange={(value) => {\r\n                  setCode(value || '');\r\n                  // Mark that user has started typing\r\n                  if (!hasUserTyped && value && value.trim() !== '') {\r\n                    setHasUserTyped(true);\r\n                  }\r\n                }}\r\n                language={language}\r\n                theme=\"vs-dark\"\r\n                options={{\r\n                  minimap: { enabled: false },\r\n                  fontSize: 14,\r\n                  lineNumbers: 'on',\r\n                  automaticLayout: true,\r\n                  scrollBeyondLastLine: false,\r\n                  tabSize: 4,\r\n                  wordWrap: 'on',\r\n                  overviewRulerBorder: false,\r\n                  scrollbar: {\r\n                    vertical: 'auto',\r\n                    horizontal: 'auto',\r\n                    verticalScrollbarSize: 10,\r\n                    horizontalScrollbarSize: 10\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  onClick={handleSubmit}\r\n                  disabled={status !== 'started' || timeLeft === 0 || status === 'finished' || someoneWon}\r\n                  sx={{ \r\n                    minWidth: 150,\r\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                    color: 'white',\r\n                    '&:hover': {\r\n                      background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n                    },\r\n                    '&:disabled': {\r\n                      background: 'rgba(255, 255, 255, 0.2)',\r\n                      color: 'rgba(255, 255, 255, 0.5)',\r\n                    },\r\n                  }}\r\n                >\r\n                  {status === 'waiting' ? 'Waiting for players...' : \r\n                   timeLeft === 0 ? 'Time is up!' : \r\n                   status === 'finished' || someoneWon ? 'Game Over' :\r\n                   'Submit Solution'}\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  onClick={onExit}\r\n                  sx={{ \r\n                    minWidth: 120,\r\n                    color: 'rgba(255, 255, 255, 0.9)',\r\n                    borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                    '&:hover': {\r\n                      borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                      background: 'rgba(255, 255, 255, 0.1)',\r\n                    },\r\n                  }}\r\n                >\r\n                  Exit Challenge\r\n                </Button>\r\n              </Box>\r\n\r\n              {result && result.results && (\r\n                <Paper sx={{ \r\n                  mt: 3, \r\n                  p: 2, \r\n                  background: 'rgba(255, 255, 255, 0.05)',\r\n                  border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                  color: 'rgba(255, 255, 255, 0.9)',\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Typography variant=\"h6\" sx={{ mr: 1, color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                      Test Results\r\n                    </Typography>\r\n                    {result.passed ? (\r\n                      <Chip \r\n                        icon={<CheckCircleIcon />} \r\n                        label=\"All Tests Passed\" \r\n                        color=\"success\" \r\n                        variant=\"outlined\" \r\n                      />\r\n                    ) : (\r\n                      <Chip \r\n                        icon={<ErrorIcon />} \r\n                        label=\"Some Tests Failed\" \r\n                        color=\"error\" \r\n                        variant=\"outlined\" \r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  {result.results.map((testResult, index) => (\r\n                    <Card \r\n                      key={index} \r\n                      variant=\"outlined\" \r\n                      sx={{ \r\n                        mb: 2, \r\n                        borderColor: testResult.passed ? 'success.main' : 'error.main',\r\n                        background: 'rgba(255, 255, 255, 0.05)',\r\n                        color: 'rgba(255, 255, 255, 0.9)',\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\r\n                          <Typography variant=\"subtitle1\" color={testResult.passed ? \"success.main\" : \"error.main\"}>\r\n                            Test Case {index + 1}\r\n                          </Typography>\r\n                          <Chip \r\n                            size=\"small\"\r\n                            label={testResult.passed ? \"Passed\" : \"Failed\"}\r\n                            color={testResult.passed ? \"success\" : \"error\"}\r\n                          />\r\n                        </Box>\r\n                        <Box sx={{ pl: 2 }}>\r\n                          <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                            Input:\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                            {testResult.input}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                            Expected Output:\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                            {testResult.expected}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                            Your Output:\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                            {testResult.actual}\r\n                          </Typography>\r\n                          {testResult.error && (\r\n                            <>\r\n                              <Typography variant=\"subtitle2\" color=\"error\">\r\n                                Error:\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"error\" sx={{ mb: 1 }}>\r\n                                {testResult.error}\r\n                              </Typography>\r\n                            </>\r\n                          )}\r\n                          {testResult.time && (\r\n                            <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                              Execution time: {testResult.time}ms\r\n                            </Typography>\r\n                          )}\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </Paper>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Snackbar\r\n          open={notification.open}\r\n          autoHideDuration={6000}\r\n          onClose={handleCloseNotification}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleCloseNotification} severity={notification.severity}>\r\n            {notification.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {/* Game Over Dialog */}\r\n        <Dialog\r\n          open={gameOverDialog}\r\n          onClose={handleCloseGameOverDialog}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: 3,\r\n              background: 'rgba(255, 255, 255, 0.95)',\r\n              backdropFilter: 'blur(20px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.3)',\r\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\r\n            }\r\n          }}\r\n        >\r\n          <DialogContent sx={{ textAlign: 'center', py: 4 }}>\r\n            {gameResult?.isWinner ? (\r\n              <>\r\n                <EmojiEventsIcon sx={{ fontSize: 80, color: '#FFD700', mb: 2 }} />\r\n                <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: '#FFD700' }}>\r\n                  ðŸŽ‰ CONGRATULATIONS! ðŸŽ‰\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 2, color: '#333' }}>\r\n                  You Won The Challenge!\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 3, color: '#666' }}>\r\n                  All test cases passed! You've successfully solved the problem and defeated your opponent.\r\n                </Typography>\r\n                <Box sx={{ \r\n                  bgcolor: 'rgba(102, 126, 234, 0.1)', \r\n                  p: 2, \r\n                  borderRadius: 2, \r\n                  mb: 3,\r\n                  border: '1px solid rgba(102, 126, 234, 0.2)',\r\n                }}>\r\n                  <Typography variant=\"h6\" sx={{ mb: 1, color: '#333' }}>\r\n                    Final Time: {startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: '#666' }}>\r\n                    Time Remaining: {finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A'}\r\n                  </Typography>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <SentimentVeryDissatisfiedIcon sx={{ fontSize: 80, color: '#ff6b6b', mb: 2 }} />\r\n                <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: '#ff6b6b' }}>\r\n                  HARD LUCK BUDDY!!\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 2, color: '#333' }}>\r\n                  YOUR OPPONENT HAS WON THE GAME\r\n                </Typography>\r\n                <Typography variant=\"body1\" sx={{ mb: 3, color: '#666' }}>\r\n                  Your opponent successfully solved the problem before you. Better luck next time!\r\n                </Typography>\r\n                <Box sx={{ \r\n                  bgcolor: 'rgba(240, 147, 251, 0.1)', \r\n                  p: 2, \r\n                  borderRadius: 2, \r\n                  mb: 3,\r\n                  border: '1px solid rgba(240, 147, 251, 0.2)',\r\n                }}>\r\n                  <Typography variant=\"h6\" sx={{ mb: 1, color: '#333' }}>\r\n                    Final Time: {startTime && finalSubmissionTime ? formatTime(Math.floor((finalSubmissionTime - startTime) / 1000)) : 'N/A'}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: '#666' }}>\r\n                    Time Remaining: {finalTimeRemaining !== null ? formatTime(finalTimeRemaining) : 'N/A'}\r\n                  </Typography>\r\n                </Box>\r\n              </>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions sx={{ justifyContent: 'center', pb: 3 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleCloseGameOverDialog}\r\n              sx={{\r\n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                color: 'white',\r\n                '&:hover': {\r\n                  background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n                },\r\n              }}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengeRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}