{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\Codearena\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport HomePage from './components/HomePage';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [showLogin, setShowLogin] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const handleLogin = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const handleRegister = userData => {\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n    setIsAuthenticated(false);\n    setShowLogin(true);\n  };\n  const switchToRegister = () => {\n    setShowLogin(false);\n  };\n  const switchToLogin = () => {\n    setShowLogin(true);\n  };\n  if (!isAuthenticated) {\n    return showLogin ? /*#__PURE__*/_jsxDEV(Login, {\n      onLogin: handleLogin,\n      onSwitchToRegister: switchToRegister\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Register, {\n      onRegister: handleRegister,\n      onSwitchToLogin: switchToLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(HomePage, {\n    user: user,\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"h1eZuWIA+JO80OPnkjexgqEQLJk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","HomePage","Login","Register","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","user","setUser","showLogin","setShowLogin","token","localStorage","getItem","userData","JSON","parse","handleLogin","handleRegister","handleLogout","removeItem","switchToRegister","switchToLogin","onLogin","onSwitchToRegister","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","onSwitchToLogin","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/KALAIVANI/Codearena/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport HomePage from './components/HomePage';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [showLogin, setShowLogin] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already logged in\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    \r\n    if (token && userData) {\r\n      setUser(JSON.parse(userData));\r\n      setIsAuthenticated(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRegister = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    setShowLogin(true);\r\n  };\r\n\r\n  const switchToRegister = () => {\r\n    setShowLogin(false);\r\n  };\r\n\r\n  const switchToLogin = () => {\r\n    setShowLogin(true);\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return showLogin ? (\r\n      <Login onLogin={handleLogin} onSwitchToRegister={switchToRegister} />\r\n    ) : (\r\n      <Register onRegister={handleRegister} onSwitchToLogin={switchToLogin} />\r\n    );\r\n  }\r\n\r\n  return <HomePage user={user} onLogout={handleLogout} />;\r\n}\r\n\r\nexport default App; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE7C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrBN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC7BR,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,WAAW,GAAIH,QAAQ,IAAK;IAChCN,OAAO,CAACM,QAAQ,CAAC;IACjBR,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMY,cAAc,GAAIJ,QAAQ,IAAK;IACnCN,OAAO,CAACM,QAAQ,CAAC;IACjBR,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzBP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,MAAM,CAAC;IAC/BZ,OAAO,CAAC,IAAI,CAAC;IACbF,kBAAkB,CAAC,KAAK,CAAC;IACzBI,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7BX,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMY,aAAa,GAAGA,CAAA,KAAM;IAC1BZ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,IAAI,CAACL,eAAe,EAAE;IACpB,OAAOI,SAAS,gBACdP,OAAA,CAACH,KAAK;MAACwB,OAAO,EAAEN,WAAY;MAACO,kBAAkB,EAAEH;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErE1B,OAAA,CAACF,QAAQ;MAAC6B,UAAU,EAAEX,cAAe;MAACY,eAAe,EAAER;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxE;EACH;EAEA,oBAAO1B,OAAA,CAACJ,QAAQ;IAACS,IAAI,EAAEA,IAAK;IAACwB,QAAQ,EAAEZ;EAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzD;AAACxB,EAAA,CAnDQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}