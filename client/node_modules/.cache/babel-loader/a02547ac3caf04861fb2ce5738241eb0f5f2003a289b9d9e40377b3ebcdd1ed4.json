{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\coding-challenge-platform\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { CssBaseline, Container, Box } from '@mui/material';\nimport { io } from 'socket.io-client';\nimport CodingChallenge from './components/CodingChallenge';\nimport UserRegistration from './components/UserRegistration';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#90caf9'\n    },\n    secondary: {\n      main: '#f48fb1'\n    },\n    background: {\n      default: '#0a1929',\n      paper: '#1a2027'\n    }\n  }\n});\nconst socket = io('http://localhost:5000');\nfunction App() {\n  _s();\n  const [isRegistered, setIsRegistered] = useState(false);\n  const [username, setUsername] = useState('');\n  const [sessionId, setSessionId] = useState(null);\n  const [opponent, setOpponent] = useState(null);\n  useEffect(() => {\n    socket.on('challenger_found', data => {\n      setSessionId(data.sessionId);\n      setOpponent(data.opponent);\n    });\n    socket.on('challenge_received', data => {\n      setSessionId(data.sessionId);\n      setOpponent(data.opponent);\n    });\n    return () => {\n      socket.off('challenger_found');\n      socket.off('challenge_received');\n    };\n  }, []);\n  const handleRegister = name => {\n    setUsername(name);\n    setIsRegistered(true);\n    socket.emit('register_user', name);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minHeight: '100vh',\n          py: 4\n        },\n        children: !isRegistered ? /*#__PURE__*/_jsxDEV(UserRegistration, {\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CodingChallenge, {\n          socket: socket,\n          username: username,\n          sessionId: sessionId,\n          opponent: opponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hvSUjg9hvIV9pTO4ppug+UmynSg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ThemeProvider","createTheme","CssBaseline","Container","Box","io","CodingChallenge","UserRegistration","jsxDEV","_jsxDEV","theme","palette","mode","primary","main","secondary","background","default","paper","socket","App","_s","isRegistered","setIsRegistered","username","setUsername","sessionId","setSessionId","opponent","setOpponent","on","data","off","handleRegister","name","emit","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","minHeight","py","onRegister","_c","$RefreshReg$"],"sources":["C:/Users/KALAIVANI/coding-challenge-platform/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { CssBaseline, Container, Box } from '@mui/material';\r\nimport { io } from 'socket.io-client';\r\nimport CodingChallenge from './components/CodingChallenge';\r\nimport UserRegistration from './components/UserRegistration';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n    primary: {\r\n      main: '#90caf9',\r\n    },\r\n    secondary: {\r\n      main: '#f48fb1',\r\n    },\r\n    background: {\r\n      default: '#0a1929',\r\n      paper: '#1a2027',\r\n    },\r\n  },\r\n});\r\n\r\nconst socket = io('http://localhost:5000');\r\n\r\nfunction App() {\r\n  const [isRegistered, setIsRegistered] = useState(false);\r\n  const [username, setUsername] = useState('');\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const [opponent, setOpponent] = useState(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('challenger_found', (data) => {\r\n      setSessionId(data.sessionId);\r\n      setOpponent(data.opponent);\r\n    });\r\n\r\n    socket.on('challenge_received', (data) => {\r\n      setSessionId(data.sessionId);\r\n      setOpponent(data.opponent);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('challenger_found');\r\n      socket.off('challenge_received');\r\n    };\r\n  }, []);\r\n\r\n  const handleRegister = (name) => {\r\n    setUsername(name);\r\n    setIsRegistered(true);\r\n    socket.emit('register_user', name);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"xl\">\r\n        <Box sx={{ minHeight: '100vh', py: 4 }}>\r\n          {!isRegistered ? (\r\n            <UserRegistration onRegister={handleRegister} />\r\n          ) : (\r\n            <CodingChallenge\r\n              socket={socket}\r\n              username={username}\r\n              sessionId={sessionId}\r\n              opponent={opponent}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}