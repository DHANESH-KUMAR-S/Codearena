{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KALAIVANI\\\\Codearena\\\\client\\\\src\\\\components\\\\PracticeRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Typography, Paper, CircularProgress, Select, MenuItem, FormControl, InputLabel, Snackbar, Alert, Grid, Card, CardContent, Chip, Dialog, DialogContent, DialogActions, IconButton, Menu, MenuItem as MenuItemComponent, ListItemIcon } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport ErrorIcon from '@mui/icons-material/Error';\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport StopIcon from '@mui/icons-material/Stop';\nimport EditorWrapper from './EditorWrapper';\nimport { socket } from '../socket';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PracticeRoom = ({\n  onExit,\n  user,\n  onLogout\n}) => {\n  _s();\n  const [challenges, setChallenges] = useState([]);\n  const [currentChallengeIndex, setCurrentChallengeIndex] = useState(0);\n  const [challenge, setChallenge] = useState(null);\n  const [code, setCode] = useState('');\n  const [language, setLanguage] = useState('python');\n  const [status, setStatus] = useState('loading');\n  const [result, setResult] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [notification, setNotification] = useState({\n    open: false,\n    message: '',\n    severity: 'info'\n  });\n  const [startTime, setStartTime] = useState(null);\n  const [hasUserTyped, setHasUserTyped] = useState(false);\n  const [practiceEndDialog, setPracticeEndDialog] = useState(false);\n  const [solvedProblems, setSolvedProblems] = useState(0);\n  const [profileAnchorEl, setProfileAnchorEl] = useState(null);\n  const [isPracticeActive, setIsPracticeActive] = useState(false);\n  const isInitialized = React.useRef(false);\n\n  // Profile menu handlers\n  const handleProfileClick = event => {\n    setProfileAnchorEl(event.currentTarget);\n  };\n  const handleProfileClose = () => {\n    setProfileAnchorEl(null);\n  };\n  const handleLogout = () => {\n    handleProfileClose();\n    onLogout();\n  };\n  useEffect(() => {\n    // Load all challenges for practice mode\n    console.log('PracticeRoom: Emitting getPracticeChallenges');\n    console.log('PracticeRoom: Socket connected:', socket.connected);\n    if (!socket.connected) {\n      console.log('PracticeRoom: Socket not connected, waiting for connection...');\n      socket.on('connect', () => {\n        console.log('PracticeRoom: Socket connected, now requesting challenges');\n        requestChallenges();\n      });\n      return;\n    }\n    requestChallenges();\n  }, [language]);\n  const requestChallenges = () => {\n    // Add timeout in case the server doesn't respond\n    const timeout = setTimeout(() => {\n      console.error('PracticeRoom: Timeout waiting for challenges');\n      setNotification({\n        open: true,\n        message: 'Failed to load challenges. Please try again.',\n        severity: 'error'\n      });\n      setStatus('error');\n    }, 10000); // 10 second timeout\n\n    socket.emit('getPracticeChallenges', response => {\n      clearTimeout(timeout);\n      console.log('PracticeRoom: Received response:', response);\n      if (response.error) {\n        console.error('PracticeRoom: Error loading challenges:', response.error);\n        setNotification({\n          open: true,\n          message: response.error,\n          severity: 'error'\n        });\n        setStatus('error');\n        return;\n      }\n      console.log('PracticeRoom: Setting challenges:', response.challenges);\n      setChallenges(response.challenges);\n      setChallenge(response.challenges[0]);\n      setCode(response.challenges[0].boilerplateCode[language]);\n      setStatus('ready');\n      isInitialized.current = true;\n    });\n  };\n  useEffect(() => {\n    let timer;\n    if (isPracticeActive && startTime) {\n      timer = setInterval(() => {\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\n        setElapsedTime(elapsed);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [isPracticeActive, startTime]);\n  const handleLanguageChange = event => {\n    const newLang = event.target.value;\n    setLanguage(newLang);\n    // Only reset to boilerplate if user hasn't typed anything yet\n    if (challenge && challenge.boilerplateCode[newLang] && !hasUserTyped) {\n      setCode(challenge.boilerplateCode[newLang]);\n    }\n  };\n  const handleSubmit = () => {\n    if (!code.trim()) {\n      setNotification({\n        open: true,\n        message: 'Please write some code before submitting',\n        severity: 'warning'\n      });\n      return;\n    }\n    socket.emit('submitPracticeSolution', {\n      code,\n      language,\n      challengeId: challenge.id\n    });\n  };\n  const handleStartPractice = () => {\n    setIsPracticeActive(true);\n    setStartTime(Date.now());\n    setElapsedTime(0);\n    setSolvedProblems(0);\n    setCurrentChallengeIndex(0);\n    setChallenge(challenges[0]);\n    setCode(challenges[0].boilerplateCode[language]);\n    setResult(null);\n    setHasUserTyped(false);\n    isInitialized.current = true;\n    setStatus('started');\n    setNotification({\n      open: true,\n      message: 'Practice started! Good luck!',\n      severity: 'success'\n    });\n  };\n  const handleEndPractice = () => {\n    setIsPracticeActive(false);\n    setPracticeEndDialog(true);\n  };\n  const handleCloseNotification = () => {\n    setNotification({\n      ...notification,\n      open: false\n    });\n  };\n  const formatTime = seconds => {\n    if (seconds === null || seconds === undefined) return '0:00';\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  const handleClosePracticeEndDialog = () => {\n    setPracticeEndDialog(false);\n  };\n  const handleNextProblem = () => {\n    if (currentChallengeIndex < challenges.length - 1) {\n      const nextIndex = currentChallengeIndex + 1;\n      setCurrentChallengeIndex(nextIndex);\n      setChallenge(challenges[nextIndex]);\n      setCode(challenges[nextIndex].boilerplateCode[language]);\n      setResult(null);\n      setHasUserTyped(false);\n      isInitialized.current = true;\n      setNotification({\n        open: true,\n        message: `Next problem: ${challenges[nextIndex].title}`,\n        severity: 'info'\n      });\n    }\n  };\n\n  // Listen for submission results\n  useEffect(() => {\n    socket.on('practiceSubmissionResult', validation => {\n      setResult(validation);\n      if (validation.error) {\n        setNotification({\n          open: true,\n          message: `Error: ${validation.error}`,\n          severity: 'error'\n        });\n      } else if (validation.passed) {\n        setSolvedProblems(prev => prev + 1);\n        setNotification({\n          open: true,\n          message: 'Correct! Problem solved!',\n          severity: 'success'\n        });\n      } else {\n        setNotification({\n          open: true,\n          message: 'Some test cases failed. Check the results below.',\n          severity: 'warning'\n        });\n      }\n    });\n    return () => {\n      socket.off('practiceSubmissionResult');\n    };\n  }, []);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glow-orb glow-orb-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glow-orb glow-orb-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glow-orb glow-orb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100vh\",\n        sx: {\n          position: 'relative',\n          zIndex: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          sx: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glow-orb glow-orb-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glow-orb glow-orb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"glow-orb glow-orb-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        height: '70px',\n        background: 'rgba(255, 255, 255, 0.1)',\n        backdropFilter: 'blur(20px)',\n        borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: '0 30px',\n        zIndex: 1000\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/logo.png\",\n          alt: \"Code Arena\",\n          style: {\n            height: '40px',\n            width: 'auto',\n            filter: 'drop-shadow(0 0 10px rgba(102, 126, 234, 0.6))'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            color: 'rgba(255, 255, 255, 0.9)',\n            fontWeight: 500,\n            fontSize: '16px'\n          },\n          children: [\"Welcome, \", user === null || user === void 0 ? void 0 : user.username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleProfileClick,\n          sx: {\n            color: 'rgba(255, 255, 255, 0.9)',\n            background: 'rgba(255, 255, 255, 0.1)',\n            border: '1px solid rgba(255, 255, 255, 0.2)',\n            '&:hover': {\n              background: 'rgba(255, 255, 255, 0.2)',\n              transform: 'scale(1.05)'\n            },\n            transition: 'all 0.2s ease'\n          },\n          children: /*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n            sx: {\n              fontSize: 28\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        anchorEl: profileAnchorEl,\n        open: Boolean(profileAnchorEl),\n        onClose: handleProfileClose,\n        PaperProps: {\n          sx: {\n            background: 'rgba(255, 255, 255, 0.95)',\n            backdropFilter: 'blur(20px)',\n            border: '1px solid rgba(255, 255, 255, 0.3)',\n            borderRadius: 2,\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\n            mt: 1\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuItemComponent, {\n          onClick: handleLogout,\n          sx: {\n            minWidth: 150\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(LogoutIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        paddingTop: '90px',\n        minHeight: '100vh',\n        position: 'relative',\n        zIndex: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 3,\n              height: '100%',\n              overflow: 'auto',\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(20px)',\n              border: '1px solid rgba(255, 255, 255, 0.2)',\n              color: 'rgba(255, 255, 255, 0.9)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.95)'\n                },\n                children: \"Practice Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: `${currentChallengeIndex + 1}/${challenges.length}`,\n                sx: {\n                  background: 'rgba(102, 126, 234, 0.2)',\n                  color: 'rgba(255, 255, 255, 0.9)',\n                  border: '1px solid rgba(102, 126, 234, 0.3)'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), challenge && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.95)'\n                },\n                children: challenge.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: challenge.difficulty.toUpperCase(),\n                color: challenge.difficulty === 'easy' ? 'success' : challenge.difficulty === 'medium' ? 'warning' : 'error',\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                sx: {\n                  whiteSpace: 'pre-line',\n                  mb: 2,\n                  color: 'rgba(255, 255, 255, 0.8)'\n                },\n                children: challenge.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.95)'\n                },\n                children: \"Input Format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  mb: 2,\n                  color: 'rgba(255, 255, 255, 0.8)'\n                },\n                children: challenge.inputFormat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.95)'\n                },\n                children: \"Output Format:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                sx: {\n                  mb: 2,\n                  color: 'rgba(255, 255, 255, 0.8)'\n                },\n                children: challenge.outputFormat\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.95)'\n                },\n                children: \"Constraints:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                style: {\n                  color: 'rgba(255, 255, 255, 0.8)'\n                },\n                children: challenge.constraints.map((constraint, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    children: constraint\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                sx: {\n                  color: 'rgba(255, 255, 255, 0.95)'\n                },\n                children: \"Examples:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 19\n              }, this), challenge.examples.map((example, index) => /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                sx: {\n                  mb: 2,\n                  background: 'rgba(255, 255, 255, 0.05)',\n                  borderColor: 'rgba(255, 255, 255, 0.2)',\n                  color: 'rgba(255, 255, 255, 0.9)'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: {\n                      color: 'rgba(255, 255, 255, 0.7)'\n                    },\n                    children: \"Input:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1,\n                      color: 'rgba(255, 255, 255, 0.9)'\n                    },\n                    children: example.input\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: {\n                      color: 'rgba(255, 255, 255, 0.7)'\n                    },\n                    children: \"Output:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontFamily: 'monospace',\n                      mb: 1,\n                      color: 'rgba(255, 255, 255, 0.9)'\n                    },\n                    children: example.output\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 450,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: {\n                      color: 'rgba(255, 255, 255, 0.7)'\n                    },\n                    children: \"Explanation:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      whiteSpace: 'pre-line',\n                      color: 'rgba(255, 255, 255, 0.8)'\n                    },\n                    children: example.explanation\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 0,\n            sx: {\n              p: 3,\n              height: '100%',\n              background: 'rgba(255, 255, 255, 0.1)',\n              backdropFilter: 'blur(20px)',\n              border: '1px solid rgba(255, 255, 255, 0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2,\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                sx: {\n                  minWidth: 120\n                },\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.8)'\n                  },\n                  children: \"Language\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: language,\n                  onChange: handleLanguageChange,\n                  label: \"Language\",\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.9)',\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.3)'\n                    },\n                    '&:hover .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255, 255, 255, 0.5)'\n                    },\n                    '& .MuiSvgIcon-root': {\n                      color: 'rgba(255, 255, 255, 0.8)'\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"python\",\n                    children: \"Python\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"cpp\",\n                    children: \"C++\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"java\",\n                    children: \"Java\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 481,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2,\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  size: \"small\",\n                  onClick: () => {\n                    if (challenge && challenge.boilerplateCode[language]) {\n                      setCode(challenge.boilerplateCode[language]);\n                      setHasUserTyped(false);\n                      isInitialized.current = false;\n                    }\n                  },\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.9)',\n                    borderColor: 'rgba(255, 255, 255, 0.3)',\n                    '&:hover': {\n                      borderColor: 'rgba(255, 255, 255, 0.5)',\n                      background: 'rgba(255, 255, 255, 0.1)'\n                    }\n                  },\n                  children: \"Reset Code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.9)',\n                    fontWeight: 600\n                  },\n                  children: [\"Time: \", formatTime(elapsedTime)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: 'rgba(102, 126, 234, 0.9)',\n                    fontWeight: 600\n                  },\n                  children: [\"Solved: \", solvedProblems]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(EditorWrapper, {\n              value: code,\n              onChange: value => {\n                setCode(value || '');\n                // Mark that user has started typing\n                if (!hasUserTyped && value && value.trim() !== '') {\n                  setHasUserTyped(true);\n                }\n              },\n              language: language,\n              theme: \"vs-dark\",\n              options: {\n                minimap: {\n                  enabled: false\n                },\n                fontSize: 14,\n                lineNumbers: 'on',\n                automaticLayout: true,\n                scrollBeyondLastLine: false,\n                tabSize: 4,\n                wordWrap: 'on',\n                overviewRulerBorder: false,\n                scrollbar: {\n                  vertical: 'auto',\n                  horizontal: 'auto',\n                  verticalScrollbarSize: 10,\n                  horizontalScrollbarSize: 10\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2,\n                display: 'flex',\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2\n                },\n                children: [status === 'ready' && !isPracticeActive && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: handleStartPractice,\n                  sx: {\n                    minWidth: 150,\n                    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                    color: 'white',\n                    '&:hover': {\n                      background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)'\n                    }\n                  },\n                  children: \"Start Practice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 21\n                }, this), isPracticeActive && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    onClick: handleSubmit,\n                    sx: {\n                      minWidth: 150,\n                      background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                      color: 'white',\n                      '&:hover': {\n                        background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)'\n                      }\n                    },\n                    children: \"Submit Solution\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 595,\n                    columnNumber: 23\n                  }, this), result && result.passed && currentChallengeIndex < challenges.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: handleNextProblem,\n                    sx: {\n                      minWidth: 150,\n                      color: 'rgba(255, 255, 255, 0.9)',\n                      borderColor: 'rgba(255, 255, 255, 0.3)',\n                      '&:hover': {\n                        borderColor: 'rgba(255, 255, 255, 0.5)',\n                        background: 'rgba(255, 255, 255, 0.1)'\n                      }\n                    },\n                    children: \"Next Problem\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 576,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 2\n                },\n                children: [isPracticeActive && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  startIcon: /*#__PURE__*/_jsxDEV(StopIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 633,\n                    columnNumber: 34\n                  }, this),\n                  onClick: handleEndPractice,\n                  sx: {\n                    minWidth: 150,\n                    color: '#ff6b6b',\n                    borderColor: '#ff6b6b',\n                    '&:hover': {\n                      borderColor: '#ff5252',\n                      background: 'rgba(255, 107, 107, 0.1)'\n                    }\n                  },\n                  children: \"End Practice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: onExit,\n                  sx: {\n                    minWidth: 120,\n                    color: 'rgba(255, 255, 255, 0.9)',\n                    borderColor: 'rgba(255, 255, 255, 0.3)',\n                    '&:hover': {\n                      borderColor: 'rgba(255, 255, 255, 0.5)',\n                      background: 'rgba(255, 255, 255, 0.1)'\n                    }\n                  },\n                  children: \"Exit Practice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 629,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this), result && result.results && /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                mt: 3,\n                p: 2,\n                background: 'rgba(255, 255, 255, 0.05)',\n                border: '1px solid rgba(255, 255, 255, 0.2)',\n                color: 'rgba(255, 255, 255, 0.9)'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    mr: 1,\n                    color: 'rgba(255, 255, 255, 0.95)'\n                  },\n                  children: \"Test Results\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 21\n                }, this), result.passed ? /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(CheckCircleIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 680,\n                    columnNumber: 31\n                  }, this),\n                  label: \"All Tests Passed\",\n                  color: \"success\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 679,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                  icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 31\n                  }, this),\n                  label: \"Some Tests Failed\",\n                  color: \"error\",\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this), result.results.map((testResult, index) => /*#__PURE__*/_jsxDEV(Card, {\n                variant: \"outlined\",\n                sx: {\n                  mb: 2,\n                  borderColor: testResult.passed ? 'success.main' : 'error.main',\n                  background: 'rgba(255, 255, 255, 0.05)',\n                  color: 'rgba(255, 255, 255, 0.9)'\n                },\n                children: /*#__PURE__*/_jsxDEV(CardContent, {\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      mb: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      color: testResult.passed ? \"success.main\" : \"error.main\",\n                      children: [\"Test Case \", index + 1]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 707,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      size: \"small\",\n                      label: testResult.passed ? \"Passed\" : \"Failed\",\n                      color: testResult.passed ? \"success\" : \"error\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 710,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 706,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      pl: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: \"Input:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 717,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontFamily: 'monospace',\n                        mb: 1,\n                        color: 'rgba(255, 255, 255, 0.9)'\n                      },\n                      children: testResult.input\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 720,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: \"Expected Output:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 723,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontFamily: 'monospace',\n                        mb: 1,\n                        color: 'rgba(255, 255, 255, 0.9)'\n                      },\n                      children: testResult.expected\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: \"Your Output:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 729,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        fontFamily: 'monospace',\n                        mb: 1,\n                        color: 'rgba(255, 255, 255, 0.9)'\n                      },\n                      children: testResult.actual\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 732,\n                      columnNumber: 27\n                    }, this), testResult.error && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        color: \"error\",\n                        children: \"Error:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 737,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        color: \"error\",\n                        sx: {\n                          mb: 1\n                        },\n                        children: testResult.error\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 740,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true), testResult.time && /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      sx: {\n                        color: 'rgba(255, 255, 255, 0.7)'\n                      },\n                      children: [\"Execution time: \", testResult.time, \"ms\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 746,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 716,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: notification.open,\n        autoHideDuration: 6000,\n        onClose: handleCloseNotification,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'right'\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleCloseNotification,\n          severity: notification.severity,\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: practiceEndDialog,\n        onClose: handleClosePracticeEndDialog,\n        maxWidth: \"sm\",\n        fullWidth: true,\n        PaperProps: {\n          sx: {\n            borderRadius: 3,\n            background: 'rgba(255, 255, 255, 0.95)',\n            backdropFilter: 'blur(20px)',\n            border: '1px solid rgba(255, 255, 255, 0.3)',\n            boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogContent, {\n          sx: {\n            textAlign: 'center',\n            py: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(EmojiEventsIcon, {\n            sx: {\n              fontSize: 80,\n              color: '#FFD700',\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            sx: {\n              fontWeight: 'bold',\n              color: '#333'\n            },\n            children: \"Practice Complete!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mb: 2,\n              color: '#333'\n            },\n            children: solvedProblems > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"WOW.. YOU SOLVED \", solvedProblems, \" PROBLEM\", solvedProblems > 1 ? 'S' : '', \" IN \", formatTime(elapsedTime), \"!\"]\n            }, void 0, true) : 'No problems solved yet. Keep practicing!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              mb: 3,\n              color: '#666'\n            },\n            children: solvedProblems > 0 ? `Great job! You solved ${solvedProblems} out of ${challenges.length} problems in ${formatTime(elapsedTime)}.` : 'Don\\'t give up! Practice makes perfect. Try again and you\\'ll improve!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              bgcolor: 'rgba(102, 126, 234, 0.1)',\n              p: 2,\n              borderRadius: 2,\n              mb: 3,\n              border: '1px solid rgba(102, 126, 234, 0.2)'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              sx: {\n                mb: 1,\n                color: '#333'\n              },\n              children: \"Final Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#666'\n              },\n              children: [\"Problems Solved: \", solvedProblems, \"/\", challenges.length]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                color: '#666'\n              },\n              children: [\"Total Time: \", formatTime(elapsedTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          sx: {\n            justifyContent: 'center',\n            pb: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: handleClosePracticeEndDialog,\n            sx: {\n              background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n              color: 'white',\n              '&:hover': {\n                background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)'\n              }\n            },\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n};\n_s(PracticeRoom, \"8yFNdX/aSz2K/ZHacK5DdIqiQn0=\");\n_c = PracticeRoom;\nexport default PracticeRoom;\nvar _c;\n$RefreshReg$(_c, \"PracticeRoom\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Typography","Paper","CircularProgress","Select","MenuItem","FormControl","InputLabel","Snackbar","Alert","Grid","Card","CardContent","Chip","Dialog","DialogContent","DialogActions","IconButton","Menu","MenuItemComponent","ListItemIcon","CheckCircleIcon","ErrorIcon","EmojiEventsIcon","AccountCircleIcon","LogoutIcon","StopIcon","EditorWrapper","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","PracticeRoom","onExit","user","onLogout","_s","challenges","setChallenges","currentChallengeIndex","setCurrentChallengeIndex","challenge","setChallenge","code","setCode","language","setLanguage","status","setStatus","result","setResult","elapsedTime","setElapsedTime","notification","setNotification","open","message","severity","startTime","setStartTime","hasUserTyped","setHasUserTyped","practiceEndDialog","setPracticeEndDialog","solvedProblems","setSolvedProblems","profileAnchorEl","setProfileAnchorEl","isPracticeActive","setIsPracticeActive","isInitialized","useRef","handleProfileClick","event","currentTarget","handleProfileClose","handleLogout","console","log","connected","on","requestChallenges","timeout","setTimeout","error","emit","response","clearTimeout","boilerplateCode","current","timer","setInterval","elapsed","Math","floor","Date","now","clearInterval","handleLanguageChange","newLang","target","value","handleSubmit","trim","challengeId","id","handleStartPractice","handleEndPractice","handleCloseNotification","formatTime","seconds","undefined","mins","secs","toString","padStart","handleClosePracticeEndDialog","handleNextProblem","length","nextIndex","title","validation","passed","prev","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","height","sx","position","zIndex","color","top","left","right","background","backdropFilter","borderBottom","padding","src","alt","style","width","filter","gap","fontWeight","fontSize","username","onClick","border","transform","transition","anchorEl","Boolean","onClose","PaperProps","borderRadius","boxShadow","mt","minWidth","p","paddingTop","minHeight","container","spacing","item","xs","md","elevation","overflow","mb","variant","label","gutterBottom","difficulty","toUpperCase","whiteSpace","description","inputFormat","outputFormat","constraints","map","constraint","index","examples","example","borderColor","fontFamily","input","output","explanation","onChange","size","theme","options","minimap","enabled","lineNumbers","automaticLayout","scrollBeyondLastLine","tabSize","wordWrap","overviewRulerBorder","scrollbar","vertical","horizontal","verticalScrollbarSize","horizontalScrollbarSize","startIcon","results","mr","icon","testResult","pl","expected","actual","time","autoHideDuration","anchorOrigin","maxWidth","fullWidth","textAlign","py","bgcolor","pb","_c","$RefreshReg$"],"sources":["C:/Users/KALAIVANI/Codearena/client/src/components/PracticeRoom.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  CircularProgress,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Snackbar,\r\n  Alert,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Chip,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem as MenuItemComponent,\r\n  ListItemIcon,\r\n} from '@mui/material';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport EmojiEventsIcon from '@mui/icons-material/EmojiEvents';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport StopIcon from '@mui/icons-material/Stop';\r\nimport EditorWrapper from './EditorWrapper';\r\nimport { socket } from '../socket';\r\nimport './Login.css';\r\n\r\nconst PracticeRoom = ({ onExit, user, onLogout }) => {\r\n  const [challenges, setChallenges] = useState([]);\r\n  const [currentChallengeIndex, setCurrentChallengeIndex] = useState(0);\r\n  const [challenge, setChallenge] = useState(null);\r\n  const [code, setCode] = useState('');\r\n  const [language, setLanguage] = useState('python');\r\n  const [status, setStatus] = useState('loading');\r\n  const [result, setResult] = useState(null);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [notification, setNotification] = useState({ open: false, message: '', severity: 'info' });\r\n  const [startTime, setStartTime] = useState(null);\r\n  const [hasUserTyped, setHasUserTyped] = useState(false);\r\n  const [practiceEndDialog, setPracticeEndDialog] = useState(false);\r\n  const [solvedProblems, setSolvedProblems] = useState(0);\r\n  const [profileAnchorEl, setProfileAnchorEl] = useState(null);\r\n  const [isPracticeActive, setIsPracticeActive] = useState(false);\r\n  const isInitialized = React.useRef(false);\r\n\r\n  // Profile menu handlers\r\n  const handleProfileClick = (event) => {\r\n    setProfileAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleProfileClose = () => {\r\n    setProfileAnchorEl(null);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    handleProfileClose();\r\n    onLogout();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load all challenges for practice mode\r\n    console.log('PracticeRoom: Emitting getPracticeChallenges');\r\n    console.log('PracticeRoom: Socket connected:', socket.connected);\r\n    \r\n    if (!socket.connected) {\r\n      console.log('PracticeRoom: Socket not connected, waiting for connection...');\r\n      socket.on('connect', () => {\r\n        console.log('PracticeRoom: Socket connected, now requesting challenges');\r\n        requestChallenges();\r\n      });\r\n      return;\r\n    }\r\n    \r\n    requestChallenges();\r\n  }, [language]);\r\n\r\n  const requestChallenges = () => {\r\n    // Add timeout in case the server doesn't respond\r\n    const timeout = setTimeout(() => {\r\n      console.error('PracticeRoom: Timeout waiting for challenges');\r\n      setNotification({\r\n        open: true,\r\n        message: 'Failed to load challenges. Please try again.',\r\n        severity: 'error'\r\n      });\r\n      setStatus('error');\r\n    }, 10000); // 10 second timeout\r\n\r\n    socket.emit('getPracticeChallenges', (response) => {\r\n      clearTimeout(timeout);\r\n      console.log('PracticeRoom: Received response:', response);\r\n      if (response.error) {\r\n        console.error('PracticeRoom: Error loading challenges:', response.error);\r\n        setNotification({\r\n          open: true,\r\n          message: response.error,\r\n          severity: 'error'\r\n        });\r\n        setStatus('error');\r\n        return;\r\n      }\r\n      \r\n      console.log('PracticeRoom: Setting challenges:', response.challenges);\r\n      setChallenges(response.challenges);\r\n      setChallenge(response.challenges[0]);\r\n      setCode(response.challenges[0].boilerplateCode[language]);\r\n      setStatus('ready');\r\n      isInitialized.current = true;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isPracticeActive && startTime) {\r\n      timer = setInterval(() => {\r\n        const elapsed = Math.floor((Date.now() - startTime) / 1000);\r\n        setElapsedTime(elapsed);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isPracticeActive, startTime]);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    const newLang = event.target.value;\r\n    setLanguage(newLang);\r\n    // Only reset to boilerplate if user hasn't typed anything yet\r\n    if (challenge && challenge.boilerplateCode[newLang] && !hasUserTyped) {\r\n      setCode(challenge.boilerplateCode[newLang]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!code.trim()) {\r\n      setNotification({\r\n        open: true,\r\n        message: 'Please write some code before submitting',\r\n        severity: 'warning'\r\n      });\r\n      return;\r\n    }\r\n\r\n    socket.emit('submitPracticeSolution', {\r\n      code,\r\n      language,\r\n      challengeId: challenge.id\r\n    });\r\n  };\r\n\r\n  const handleStartPractice = () => {\r\n    setIsPracticeActive(true);\r\n    setStartTime(Date.now());\r\n    setElapsedTime(0);\r\n    setSolvedProblems(0);\r\n    setCurrentChallengeIndex(0);\r\n    setChallenge(challenges[0]);\r\n    setCode(challenges[0].boilerplateCode[language]);\r\n    setResult(null);\r\n    setHasUserTyped(false);\r\n    isInitialized.current = true;\r\n    setStatus('started');\r\n    setNotification({\r\n      open: true,\r\n      message: 'Practice started! Good luck!',\r\n      severity: 'success'\r\n    });\r\n  };\r\n\r\n  const handleEndPractice = () => {\r\n    setIsPracticeActive(false);\r\n    setPracticeEndDialog(true);\r\n  };\r\n\r\n  const handleCloseNotification = () => {\r\n    setNotification({ ...notification, open: false });\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    if (seconds === null || seconds === undefined) return '0:00';\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleClosePracticeEndDialog = () => {\r\n    setPracticeEndDialog(false);\r\n  };\r\n\r\n  const handleNextProblem = () => {\r\n    if (currentChallengeIndex < challenges.length - 1) {\r\n      const nextIndex = currentChallengeIndex + 1;\r\n      setCurrentChallengeIndex(nextIndex);\r\n      setChallenge(challenges[nextIndex]);\r\n      setCode(challenges[nextIndex].boilerplateCode[language]);\r\n      setResult(null);\r\n      setHasUserTyped(false);\r\n      isInitialized.current = true;\r\n      setNotification({\r\n        open: true,\r\n        message: `Next problem: ${challenges[nextIndex].title}`,\r\n        severity: 'info'\r\n      });\r\n    }\r\n  };\r\n\r\n  // Listen for submission results\r\n  useEffect(() => {\r\n    socket.on('practiceSubmissionResult', (validation) => {\r\n      setResult(validation);\r\n      if (validation.error) {\r\n        setNotification({\r\n          open: true,\r\n          message: `Error: ${validation.error}`,\r\n          severity: 'error'\r\n        });\r\n      } else if (validation.passed) {\r\n        setSolvedProblems(prev => prev + 1);\r\n        setNotification({\r\n          open: true,\r\n          message: 'Correct! Problem solved!',\r\n          severity: 'success'\r\n        });\r\n      } else {\r\n        setNotification({\r\n          open: true,\r\n          message: 'Some test cases failed. Check the results below.',\r\n          severity: 'warning'\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off('practiceSubmissionResult');\r\n    };\r\n  }, []);\r\n\r\n  if (status === 'loading') {\r\n    return (\r\n      <div className=\"auth-container\">\r\n        <div className=\"auth-background\">\r\n          <div className=\"glow-orb glow-orb-1\"></div>\r\n          <div className=\"glow-orb glow-orb-2\"></div>\r\n          <div className=\"glow-orb glow-orb-3\"></div>\r\n        </div>\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100vh\" sx={{ position: 'relative', zIndex: 2 }}>\r\n          <CircularProgress sx={{ color: 'white' }} />\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      {/* Background with glow orbs */}\r\n      <div className=\"auth-background\">\r\n        <div className=\"glow-orb glow-orb-1\"></div>\r\n        <div className=\"glow-orb glow-orb-2\"></div>\r\n        <div className=\"glow-orb glow-orb-3\"></div>\r\n      </div>\r\n\r\n      {/* Status Bar */}\r\n      <Box\r\n        sx={{\r\n          position: 'fixed',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: '70px',\r\n          background: 'rgba(255, 255, 255, 0.1)',\r\n          backdropFilter: 'blur(20px)',\r\n          borderBottom: '1px solid rgba(255, 255, 255, 0.2)',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'space-between',\r\n          padding: '0 30px',\r\n          zIndex: 1000,\r\n        }}\r\n      >\r\n        {/* Logo */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          <img \r\n            src=\"/logo.png\" \r\n            alt=\"Code Arena\" \r\n            style={{\r\n              height: '40px',\r\n              width: 'auto',\r\n              filter: 'drop-shadow(0 0 10px rgba(102, 126, 234, 0.6))',\r\n            }}\r\n          />\r\n        </Box>\r\n\r\n        {/* Profile Section */}\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\r\n          <Typography\r\n            sx={{\r\n              color: 'rgba(255, 255, 255, 0.9)',\r\n              fontWeight: 500,\r\n              fontSize: '16px',\r\n            }}\r\n          >\r\n            Welcome, {user?.username}!\r\n          </Typography>\r\n          <IconButton\r\n            onClick={handleProfileClick}\r\n            sx={{\r\n              color: 'rgba(255, 255, 255, 0.9)',\r\n              background: 'rgba(255, 255, 255, 0.1)',\r\n              border: '1px solid rgba(255, 255, 255, 0.2)',\r\n              '&:hover': {\r\n                background: 'rgba(255, 255, 255, 0.2)',\r\n                transform: 'scale(1.05)',\r\n              },\r\n              transition: 'all 0.2s ease',\r\n            }}\r\n          >\r\n            <AccountCircleIcon sx={{ fontSize: 28 }} />\r\n          </IconButton>\r\n        </Box>\r\n\r\n        {/* Profile Menu */}\r\n        <Menu\r\n          anchorEl={profileAnchorEl}\r\n          open={Boolean(profileAnchorEl)}\r\n          onClose={handleProfileClose}\r\n          PaperProps={{\r\n            sx: {\r\n              background: 'rgba(255, 255, 255, 0.95)',\r\n              backdropFilter: 'blur(20px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.3)',\r\n              borderRadius: 2,\r\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\r\n              mt: 1,\r\n            }\r\n          }}\r\n        >\r\n          <MenuItemComponent onClick={handleLogout} sx={{ minWidth: 150 }}>\r\n            <ListItemIcon>\r\n              <LogoutIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <Typography>Logout</Typography>\r\n          </MenuItemComponent>\r\n        </Menu>\r\n      </Box>\r\n\r\n      {/* Main Content */}\r\n      <Box sx={{ \r\n        p: 3, \r\n        paddingTop: '90px', \r\n        minHeight: '100vh',\r\n        position: 'relative',\r\n        zIndex: 2,\r\n      }}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Paper \r\n              elevation={0}\r\n              sx={{ \r\n                p: 3, \r\n                height: '100%', \r\n                overflow: 'auto',\r\n                background: 'rgba(255, 255, 255, 0.1)',\r\n                backdropFilter: 'blur(20px)',\r\n                border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                color: 'rgba(255, 255, 255, 0.9)',\r\n              }}\r\n            >\r\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n                <Typography variant=\"h5\" sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                  Practice Mode\r\n                </Typography>\r\n                <Chip \r\n                  label={`${currentChallengeIndex + 1}/${challenges.length}`}\r\n                  sx={{ \r\n                    background: 'rgba(102, 126, 234, 0.2)',\r\n                    color: 'rgba(255, 255, 255, 0.9)',\r\n                    border: '1px solid rgba(102, 126, 234, 0.3)',\r\n                  }}\r\n                />\r\n              </Box>\r\n              \r\n              {challenge && (\r\n                <>\r\n                  <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                    {challenge.title}\r\n                  </Typography>\r\n                  <Chip \r\n                    label={challenge.difficulty.toUpperCase()} \r\n                    color={\r\n                      challenge.difficulty === 'easy' ? 'success' : \r\n                      challenge.difficulty === 'medium' ? 'warning' : 'error'\r\n                    }\r\n                    sx={{ mb: 2 }}\r\n                  />\r\n                  <Typography variant=\"body1\" sx={{ whiteSpace: 'pre-line', mb: 2, color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                    {challenge.description}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                    Input Format:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 2, color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                    {challenge.inputFormat}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                    Output Format:\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ mb: 2, color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                    {challenge.outputFormat}\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                    Constraints:\r\n                  </Typography>\r\n                  <ul style={{ color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                    {challenge.constraints.map((constraint, index) => (\r\n                      <li key={index}>\r\n                        <Typography variant=\"body2\">{constraint}</Typography>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                  <Typography variant=\"h6\" gutterBottom sx={{ color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                    Examples:\r\n                  </Typography>\r\n                  {challenge.examples.map((example, index) => (\r\n                    <Card \r\n                      key={index} \r\n                      variant=\"outlined\" \r\n                      sx={{ \r\n                        mb: 2,\r\n                        background: 'rgba(255, 255, 255, 0.05)',\r\n                        borderColor: 'rgba(255, 255, 255, 0.2)',\r\n                        color: 'rgba(255, 255, 255, 0.9)',\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                          Input:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                          {example.input}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                          Output:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                          {example.output}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                          Explanation:\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-line', color: 'rgba(255, 255, 255, 0.8)' }}>\r\n                          {example.explanation}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8}>\r\n            <Paper \r\n              elevation={0}\r\n              sx={{ \r\n                p: 3, \r\n                height: '100%',\r\n                background: 'rgba(255, 255, 255, 0.1)',\r\n                backdropFilter: 'blur(20px)',\r\n                border: '1px solid rgba(255, 255, 255, 0.2)',\r\n              }}\r\n            >\r\n              <Box sx={{ mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                <FormControl sx={{ minWidth: 120 }}>\r\n                  <InputLabel sx={{ color: 'rgba(255, 255, 255, 0.8)' }}>Language</InputLabel>\r\n                  <Select\r\n                    value={language}\r\n                    onChange={handleLanguageChange}\r\n                    label=\"Language\"\r\n                    sx={{\r\n                      color: 'rgba(255, 255, 255, 0.9)',\r\n                      '& .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                      },\r\n                      '&:hover .MuiOutlinedInput-notchedOutline': {\r\n                        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                      },\r\n                      '& .MuiSvgIcon-root': {\r\n                        color: 'rgba(255, 255, 255, 0.8)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    <MenuItem value=\"python\">Python</MenuItem>\r\n                    <MenuItem value=\"cpp\">C++</MenuItem>\r\n                    <MenuItem value=\"java\">Java</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                      if (challenge && challenge.boilerplateCode[language]) {\r\n                        setCode(challenge.boilerplateCode[language]);\r\n                        setHasUserTyped(false);\r\n                        isInitialized.current = false;\r\n                      }\r\n                    }}\r\n                    sx={{\r\n                      color: 'rgba(255, 255, 255, 0.9)',\r\n                      borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                      '&:hover': {\r\n                        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                        background: 'rgba(255, 255, 255, 0.1)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    Reset Code\r\n                  </Button>\r\n                  <Typography \r\n                    variant=\"h6\" \r\n                    sx={{ \r\n                      color: 'rgba(255, 255, 255, 0.9)',\r\n                      fontWeight: 600,\r\n                    }}\r\n                  >\r\n                    Time: {formatTime(elapsedTime)}\r\n                  </Typography>\r\n                  <Typography \r\n                    variant=\"h6\" \r\n                    sx={{ \r\n                      color: 'rgba(102, 126, 234, 0.9)',\r\n                      fontWeight: 600,\r\n                    }}\r\n                  >\r\n                    Solved: {solvedProblems}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n\r\n              <EditorWrapper\r\n                value={code}\r\n                onChange={(value) => {\r\n                  setCode(value || '');\r\n                  // Mark that user has started typing\r\n                  if (!hasUserTyped && value && value.trim() !== '') {\r\n                    setHasUserTyped(true);\r\n                  }\r\n                }}\r\n                language={language}\r\n                theme=\"vs-dark\"\r\n                options={{\r\n                  minimap: { enabled: false },\r\n                  fontSize: 14,\r\n                  lineNumbers: 'on',\r\n                  automaticLayout: true,\r\n                  scrollBeyondLastLine: false,\r\n                  tabSize: 4,\r\n                  wordWrap: 'on',\r\n                  overviewRulerBorder: false,\r\n                  scrollbar: {\r\n                    vertical: 'auto',\r\n                    horizontal: 'auto',\r\n                    verticalScrollbarSize: 10,\r\n                    horizontalScrollbarSize: 10\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <Box sx={{ mt: 2, display: 'flex', justifyContent: 'space-between' }}>\r\n                <Box sx={{ display: 'flex', gap: 2 }}>\r\n                  {status === 'ready' && !isPracticeActive && (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={handleStartPractice}\r\n                      sx={{ \r\n                        minWidth: 150,\r\n                        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                        color: 'white',\r\n                        '&:hover': {\r\n                          background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n                        },\r\n                      }}\r\n                    >\r\n                      Start Practice\r\n                    </Button>\r\n                  )}\r\n                  {isPracticeActive && (\r\n                    <>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        onClick={handleSubmit}\r\n                        sx={{ \r\n                          minWidth: 150,\r\n                          background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                          color: 'white',\r\n                          '&:hover': {\r\n                            background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n                          },\r\n                        }}\r\n                      >\r\n                        Submit Solution\r\n                      </Button>\r\n                      {result && result.passed && currentChallengeIndex < challenges.length - 1 && (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          onClick={handleNextProblem}\r\n                          sx={{ \r\n                            minWidth: 150,\r\n                            color: 'rgba(255, 255, 255, 0.9)',\r\n                            borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                            '&:hover': {\r\n                              borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                              background: 'rgba(255, 255, 255, 0.1)',\r\n                            },\r\n                          }}\r\n                        >\r\n                          Next Problem\r\n                        </Button>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </Box>\r\n                <Box sx={{ display: 'flex', gap: 2 }}>\r\n                  {isPracticeActive && (\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      startIcon={<StopIcon />}\r\n                      onClick={handleEndPractice}\r\n                      sx={{ \r\n                        minWidth: 150,\r\n                        color: '#ff6b6b',\r\n                        borderColor: '#ff6b6b',\r\n                        '&:hover': {\r\n                          borderColor: '#ff5252',\r\n                          background: 'rgba(255, 107, 107, 0.1)',\r\n                        },\r\n                      }}\r\n                    >\r\n                      End Practice\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    onClick={onExit}\r\n                    sx={{ \r\n                      minWidth: 120,\r\n                      color: 'rgba(255, 255, 255, 0.9)',\r\n                      borderColor: 'rgba(255, 255, 255, 0.3)',\r\n                      '&:hover': {\r\n                        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n                        background: 'rgba(255, 255, 255, 0.1)',\r\n                      },\r\n                    }}\r\n                  >\r\n                    Exit Practice\r\n                  </Button>\r\n                </Box>\r\n              </Box>\r\n\r\n              {result && result.results && (\r\n                <Paper sx={{ \r\n                  mt: 3, \r\n                  p: 2, \r\n                  background: 'rgba(255, 255, 255, 0.05)',\r\n                  border: '1px solid rgba(255, 255, 255, 0.2)',\r\n                  color: 'rgba(255, 255, 255, 0.9)',\r\n                }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                    <Typography variant=\"h6\" sx={{ mr: 1, color: 'rgba(255, 255, 255, 0.95)' }}>\r\n                      Test Results\r\n                    </Typography>\r\n                    {result.passed ? (\r\n                      <Chip \r\n                        icon={<CheckCircleIcon />} \r\n                        label=\"All Tests Passed\" \r\n                        color=\"success\" \r\n                        variant=\"outlined\" \r\n                      />\r\n                    ) : (\r\n                      <Chip \r\n                        icon={<ErrorIcon />} \r\n                        label=\"Some Tests Failed\" \r\n                        color=\"error\" \r\n                        variant=\"outlined\" \r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  {result.results.map((testResult, index) => (\r\n                    <Card \r\n                      key={index} \r\n                      variant=\"outlined\" \r\n                      sx={{ \r\n                        mb: 2, \r\n                        borderColor: testResult.passed ? 'success.main' : 'error.main',\r\n                        background: 'rgba(255, 255, 255, 0.05)',\r\n                        color: 'rgba(255, 255, 255, 0.9)',\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\r\n                          <Typography variant=\"subtitle1\" color={testResult.passed ? \"success.main\" : \"error.main\"}>\r\n                            Test Case {index + 1}\r\n                          </Typography>\r\n                          <Chip \r\n                            size=\"small\"\r\n                            label={testResult.passed ? \"Passed\" : \"Failed\"}\r\n                            color={testResult.passed ? \"success\" : \"error\"}\r\n                          />\r\n                        </Box>\r\n                        <Box sx={{ pl: 2 }}>\r\n                          <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                            Input:\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                            {testResult.input}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                            Expected Output:\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                            {testResult.expected}\r\n                          </Typography>\r\n                          <Typography variant=\"subtitle2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                            Your Output:\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', mb: 1, color: 'rgba(255, 255, 255, 0.9)' }}>\r\n                            {testResult.actual}\r\n                          </Typography>\r\n                          {testResult.error && (\r\n                            <>\r\n                              <Typography variant=\"subtitle2\" color=\"error\">\r\n                                Error:\r\n                              </Typography>\r\n                              <Typography variant=\"body2\" color=\"error\" sx={{ mb: 1 }}>\r\n                                {testResult.error}\r\n                              </Typography>\r\n                            </>\r\n                          )}\r\n                          {testResult.time && (\r\n                            <Typography variant=\"body2\" sx={{ color: 'rgba(255, 255, 255, 0.7)' }}>\r\n                              Execution time: {testResult.time}ms\r\n                            </Typography>\r\n                          )}\r\n                        </Box>\r\n                      </CardContent>\r\n                    </Card>\r\n                  ))}\r\n                </Paper>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Snackbar\r\n          open={notification.open}\r\n          autoHideDuration={6000}\r\n          onClose={handleCloseNotification}\r\n          anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        >\r\n          <Alert onClose={handleCloseNotification} severity={notification.severity}>\r\n            {notification.message}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {/* Practice End Dialog */}\r\n        <Dialog\r\n          open={practiceEndDialog}\r\n          onClose={handleClosePracticeEndDialog}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n          PaperProps={{\r\n            sx: {\r\n              borderRadius: 3,\r\n              background: 'rgba(255, 255, 255, 0.95)',\r\n              backdropFilter: 'blur(20px)',\r\n              border: '1px solid rgba(255, 255, 255, 0.3)',\r\n              boxShadow: '0 8px 32px rgba(0, 0, 0, 0.1)',\r\n            }\r\n          }}\r\n        >\r\n          <DialogContent sx={{ textAlign: 'center', py: 4 }}>\r\n            <EmojiEventsIcon sx={{ fontSize: 80, color: '#FFD700', mb: 2 }} />\r\n            <Typography variant=\"h4\" gutterBottom sx={{ fontWeight: 'bold', color: '#333' }}>\r\n              Practice Complete!\r\n            </Typography>\r\n            <Typography variant=\"h6\" sx={{ mb: 2, color: '#333' }}>\r\n              {solvedProblems > 0 ? (\r\n                <>\r\n                  WOW.. YOU SOLVED {solvedProblems} PROBLEM{solvedProblems > 1 ? 'S' : ''} IN {formatTime(elapsedTime)}!\r\n                </>\r\n              ) : (\r\n                'No problems solved yet. Keep practicing!'\r\n              )}\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ mb: 3, color: '#666' }}>\r\n              {solvedProblems > 0 \r\n                ? `Great job! You solved ${solvedProblems} out of ${challenges.length} problems in ${formatTime(elapsedTime)}.`\r\n                : 'Don\\'t give up! Practice makes perfect. Try again and you\\'ll improve!'\r\n              }\r\n            </Typography>\r\n            <Box sx={{ \r\n              bgcolor: 'rgba(102, 126, 234, 0.1)', \r\n              p: 2, \r\n              borderRadius: 2, \r\n              mb: 3,\r\n              border: '1px solid rgba(102, 126, 234, 0.2)',\r\n            }}>\r\n              <Typography variant=\"h6\" sx={{ mb: 1, color: '#333' }}>\r\n                Final Stats\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#666' }}>\r\n                Problems Solved: {solvedProblems}/{challenges.length}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ color: '#666' }}>\r\n                Total Time: {formatTime(elapsedTime)}\r\n              </Typography>\r\n            </Box>\r\n          </DialogContent>\r\n          <DialogActions sx={{ justifyContent: 'center', pb: 3 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleClosePracticeEndDialog}\r\n              sx={{\r\n                background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\r\n                color: 'white',\r\n                '&:hover': {\r\n                  background: 'linear-gradient(135deg, #764ba2 0%, #667eea 100%)',\r\n                },\r\n              }}\r\n            >\r\n              Continue\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticeRoom; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}